"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6563],{9613:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>m});var r=t(9496);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),c=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},u=function(e){var n=c(e.components);return r.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=c(t),m=a,f=d["".concat(s,".").concat(m)]||d[m]||p[m]||o;return t?r.createElement(f,l(l({ref:n},u),{},{components:t})):r.createElement(f,l({ref:n},u))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,l=new Array(o);l[0]=d;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var c=2;c<o;c++)l[c]=t[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},208:(e,n,t)=>{t.d(n,{Z:()=>l});var r=t(9496),a=t(5924);const o="tabItem_IPoj";function l(e){let{children:n,hidden:t,className:l}=e;return r.createElement("div",{role:"tabpanel",className:(0,a.Z)(o,l),hidden:t},n)}},4210:(e,n,t)=>{t.d(n,{Z:()=>m});var r=t(4250),a=t(9496),o=t(5924),l=t(4375),i=t(4436),s=t(7883),c=t(4930);const u="tabList_xr86",p="tabItem_r4_W";function d(e){var n;const{lazy:t,block:l,defaultValue:d,values:m,groupId:f,className:y}=e,h=a.Children.map(e.children,(e=>{if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),v=m??h.map((e=>{let{props:{value:n,label:t,attributes:r}}=e;return{value:n,label:t,attributes:r}})),b=(0,i.l)(v,((e,n)=>e.value===n.value));if(b.length>0)throw new Error(`Docusaurus error: Duplicate values "${b.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const g=null===d?d:d??(null==(n=h.find((e=>e.props.default)))?void 0:n.props.value)??h[0].props.value;if(null!==g&&!v.some((e=>e.value===g)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${g}" but none of its children has the corresponding value. Available values are: ${v.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:w,setTabGroupChoices:O}=(0,s.U)(),[k,I]=(0,a.useState)(g),M=[],{blockElementScrollPositionUntilNextRender:x}=(0,c.o5)();if(null!=f){const e=w[f];null!=e&&e!==k&&v.some((n=>n.value===e))&&I(e)}const D=e=>{const n=e.currentTarget,t=M.indexOf(n),r=v[t].value;r!==k&&(x(n),I(r),null!=f&&O(f,String(r)))},P=e=>{var n;let t=null;switch(e.key){case"Enter":D(e);break;case"ArrowRight":{const n=M.indexOf(e.currentTarget)+1;t=M[n]??M[0];break}case"ArrowLeft":{const n=M.indexOf(e.currentTarget)-1;t=M[n]??M[M.length-1];break}}null==(n=t)||n.focus()};return a.createElement("div",{className:(0,o.Z)("tabs-container",u)},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":l},y)},v.map((e=>{let{value:n,label:t,attributes:l}=e;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:k===n?0:-1,"aria-selected":k===n,key:n,ref:e=>M.push(e),onKeyDown:P,onClick:D},l,{className:(0,o.Z)("tabs__item",p,null==l?void 0:l.className,{"tabs__item--active":k===n})}),t??n)}))),t?(0,a.cloneElement)(h.filter((e=>e.props.value===k))[0],{className:"margin-top--md"}):a.createElement("div",{className:"margin-top--md"},h.map(((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==k})))))}function m(e){const n=(0,l.Z)();return a.createElement(d,(0,r.Z)({key:String(n)},e))}},1796:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var r=t(4250),a=(t(9496),t(9613));t(208),t(4210);const o={sidebar_position:2,description:"Generic CRUD functions setup using your own action factory."},l="JSON:API generic CRUD",i={unversionedId:"examples/jsonapi-generic",id:"examples/jsonapi-generic",title:"JSON:API generic CRUD",description:"Generic CRUD functions setup using your own action factory.",source:"@site/docs/examples/jsonapi-generic.mdx",sourceDirName:"examples",slug:"/examples/jsonapi-generic",permalink:"/func-client/docs/examples/jsonapi-generic",draft:!1,editUrl:"https://github.com/paul-thebaud/func-client/tree/main/website/docs/examples/jsonapi-generic.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,description:"Generic CRUD functions setup using your own action factory."},sidebar:"tutorialSidebar",previous:{title:"JSON:API blog CRUD",permalink:"/func-client/docs/examples/jsonapi-blog"},next:{title:"API",permalink:"/func-client/docs/category/api"}},s={},c=[{value:"Classic CRUD",id:"classic-crud",level:2},{value:"View many",id:"view-many",level:3},{value:"View one",id:"view-one",level:3},{value:"Create or update one",id:"create-or-update-one",level:3},{value:"Delete one",id:"delete-one",level:3}],u={toc:c};function p(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"jsonapi-generic-crud"},"JSON:API generic CRUD"),(0,a.kt)("admonition",{title:"What you'll learn",type:"tip"},(0,a.kt)("ul",{parentName:"admonition"},(0,a.kt)("li",{parentName:"ul"},"Writing generic CRUD functions to use your models through a JSON:API backend"))),(0,a.kt)("h2",{id:"classic-crud"},"Classic CRUD"),(0,a.kt)("h3",{id:"view-many"},"View many"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"import { ModelRelationDotKey, Model, model, when, include } from 'func-client/core';\nimport { filterBy, sortByDesc, paginate, allDocument } from 'func-client/jsonapi';\nimport action from './action';\nimport Post from './models/post';\n\ntype FetchAllOptions<M extends Model> = {\n  search?: string;\n  include?: ModelRelationDotKey<M>[];\n  page?: number;\n}\n\nexport default async function fetchAll<M extends Model>(\n  useModel: M,\n  query: FetchAllOptions<M> = {},\n) {\n  return action()\n    .use(model(useModel))\n    .use(when(query.search, (a, s) => a.use(filterBy('search', s))))\n    .use(when(query.include, (a, i) => a.use(include(i))))\n    .use(sortByDesc('createdAt'))\n    .use(paginate({ number: query.page ?? 1 }))\n    .run(allDocument())\n}\n\n// Somewhere in your app.\nconst { instances, meta } = await fetchAll(Post, {\n  search: 'Hello',\n  include: ['tags'],\n});\n")),(0,a.kt)("h3",{id:"view-one"},"View one"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"import { ModelRelationDotKey, ModelId, Model, find, when, include, oneOrFail } from 'func-client/core';\nimport action from './action';\nimport Post from './models/post';\n\ntype FetchOneOptions<M extends Model> = {\n  include?: ModelRelationDotKey<M>[];\n}\n\nexport default async function fetchOne<M extends Model>(\n  useModel: M,\n  id: ModelId,\n  query: FetchOneOptions<M> = {},\n) {\n  return action()\n    .use(find(Post, id))\n    .use(when(query.include, (a, i) => a.use(include(i))))\n    .run(oneOrFail())\n}\n\n// Somewhere in your app.\nconst { data, meta } = await fetchOne(Post, '123-abc', {\n  include: ['tags'],\n});\n")),(0,a.kt)("h3",{id:"create-or-update-one"},"Create or update one"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"import { changed, fill, include, ModelInstance, ModelRelationDotKey, ModelValues, one, reset, save, when } from 'func-client/core';\nimport action from './action';\nimport Post from './models/post';\n\ntype SaveOneOptions<I extends ModelInstance> = {\n  include?: ModelRelationDotKey<I>[];\n}\n\nexport default async function saveOne<I extends ModelInstance>(\n  useInstance: I,\n  values: Partial<ModelValues<I>>,\n  query: SaveOneOptions<I> = {},\n) {\n  fill(useInstance, values);\n\n  try {\n    await action()\n      .use(save(useInstance))\n      .use(when(query.include, (a, i) => a.use(include(i))))\n      .run(when(\n        !useInstance.exists || changed(useInstance),\n        oneOrCurrent(),\n        () => useInstance,\n      ));\n  } catch (error) {\n    reset(useInstance);\n\n    throw error;\n  }\n\n  return useInstance;\n}\n\n// Somewhere in your app.\nconst post = new Post();\n\nawait saveOne(post, {\n  title: 'Hello World!',\n  publishedAt: new Date(),\n}, {\n  include: ['tags'],\n});\n")),(0,a.kt)("h3",{id:"delete-one"},"Delete one"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"import { destroy, none } from 'func-client/core';\nimport action from './action';\nimport Post from './models/post';\n\nexport default async function deleteOne(useInstance: ModelInstance) {\n  await action()\n    .use(destroy(useInstance))\n    .run(none());\n}\n\n// Somewhere in your app.\nconst post = new Post();\n\nawait deleteOne(post);\n")))}p.isMDXComponent=!0}}]);
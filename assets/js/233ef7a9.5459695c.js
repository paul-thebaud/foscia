"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7635],{9613:(e,t,o)=>{o.d(t,{Zo:()=>m,kt:()=>f});var n=o(9496);function a(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function s(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function r(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?s(Object(o),!0).forEach((function(t){a(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):s(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function i(e,t){if(null==e)return{};var o,n,a=function(e,t){if(null==e)return{};var o,n,a={},s=Object.keys(e);for(n=0;n<s.length;n++)o=s[n],t.indexOf(o)>=0||(a[o]=e[o]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)o=s[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(a[o]=e[o])}return a}var l=n.createContext({}),p=function(e){var t=n.useContext(l),o=t;return e&&(o="function"==typeof e?e(t):r(r({},t),e)),o},m=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var o=e.components,a=e.mdxType,s=e.originalType,l=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),c=p(o),d=a,f=c["".concat(l,".").concat(d)]||c[d]||u[d]||s;return o?n.createElement(f,r(r({ref:t},m),{},{components:o})):n.createElement(f,r({ref:t},m))}));function f(e,t){var o=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=o.length,r=new Array(s);r[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[c]="string"==typeof e?e:a,r[1]=i;for(var p=2;p<s;p++)r[p]=o[p];return n.createElement.apply(null,r)}return n.createElement.apply(null,o)}d.displayName="MDXCreateElement"},4943:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>p});var n=o(8028),a=(o(9496),o(9613));const s={sidebar_position:20,description:"Sharing common features across your models."},r="Composing models",i={unversionedId:"guides/models/models-composition",id:"guides/models/models-composition",title:"Composing models",description:"Sharing common features across your models.",source:"@site/docs/guides/models/models-composition.md",sourceDirName:"guides/models",slug:"/guides/models/models-composition",permalink:"/foscia/docs/guides/models/models-composition",draft:!1,editUrl:"https://github.com/paul-thebaud/foscia/tree/main/website/docs/guides/models/models-composition.md",tags:[],version:"current",sidebarPosition:20,frontMatter:{sidebar_position:20,description:"Sharing common features across your models."},sidebar:"docsSidebar",previous:{title:"Configuring models",permalink:"/foscia/docs/guides/models/models-configuration"},next:{title:"Creating a transformer",permalink:"/foscia/docs/guides/models/custom-transformers"}},l={},p=[{value:"Composition",id:"composition",level:2},{value:"Factory",id:"factory",level:2}],m={toc:p},c="wrapper";function u(e){let{components:t,...o}=e;return(0,a.kt)(c,(0,n.Z)({},m,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"composing-models"},"Composing models"),(0,a.kt)("admonition",{title:"What you'll learn",type:"tip"},(0,a.kt)("ul",{parentName:"admonition"},(0,a.kt)("li",{parentName:"ul"},"Creating composables to share features across some of your models"),(0,a.kt)("li",{parentName:"ul"},"Creating your own model factory with predefined features for all of your\nmodels"))),(0,a.kt)("p",null,"Sometimes, you may want to share common features across your models. To solve\nthis, you may use one of the two solutions proposed by Foscia:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#composition"},"Composition"),", to share features across some of your models"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#factory"},"Factory"),", to share features across all of your models")),(0,a.kt)("h2",{id:"composition"},"Composition"),(0,a.kt)("p",null,"When you need to share features across ",(0,a.kt)("strong",{parentName:"p"},"some")," of your models, you should use\ncomposition."),(0,a.kt)("p",null,"The first step is to create a composable with the features you want to share.\nThis is done through ",(0,a.kt)("inlineCode",{parentName:"p"},"makeComposable")," and uses the same syntax as ",(0,a.kt)("inlineCode",{parentName:"p"},"makeModel"),"."),(0,a.kt)("p",null,"The created composable will get its custom properties (e.g. ",(0,a.kt)("inlineCode",{parentName:"p"},"published")," below)\nrewritten to protect their descriptor. This allows using spread syntax when\nusing composable in other models' definition."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript",metastring:'title="composables/publishable.js"',title:'"composables/publishable.js"'},"import { attr, makeComposable, toDate } from 'foscia/core';\n\nexport default makeComposable({\n    publishedAt: attr(toDate()),\n    get published() {\n        return !!this.publishedAt;\n    },\n});\n")),(0,a.kt)("p",null,"The easiest way to use your composable is to object-spread it inside your\nmodel's definition."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript",metastring:'title="models/post.js"',title:'"models/post.js"'},"import { makeModel } from 'foscia/core';\nimport publishable from '../composables/publishable';\n\nexport default class Post extends makeModel('posts', {\n    ...publishable,\n    /** post definition */\n}) {}\n")),(0,a.kt)("p",null,"You may also use the model ",(0,a.kt)("inlineCode",{parentName:"p"},"extends")," method as follows:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript",metastring:'title="models/post.js"',title:'"models/post.js"'},"import { makeModel } from 'foscia/core';\nimport publishable from '../composables/publishable';\n\nexport default class Post extends makeModel('posts').extends(publishable) {}\n")),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"Please note that when using the object spread syntax, you won't be able to get a\ncorrectly typed ",(0,a.kt)("inlineCode",{parentName:"p"},"this")," context ",(0,a.kt)("em",{parentName:"p"},"inside the current definition object")," (it is\nstill available in next/previous definition or in class body). This is because\nof an\n",(0,a.kt)("a",{parentName:"p",href:"https://github.com/paul-thebaud/foscia/issues/6"},(0,a.kt)("strong",{parentName:"a"},"issue due to a TypeScript limitation")),".")),(0,a.kt)("h2",{id:"factory"},"Factory"),(0,a.kt)("p",null,"When you need to share features across ",(0,a.kt)("strong",{parentName:"p"},"all")," of your models, you should use a\ncustom model factory. It will replace the Foscia's ",(0,a.kt)("inlineCode",{parentName:"p"},"makeModel")," function."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript",metastring:'title="makeModel.js"',title:'"makeModel.js"'},"import { attr, makeModelFactory, toDate } from 'foscia/core';\n\nexport default makeModelFactory(\n    {\n        createdAt: attr(toDate()),\n        updatedAt: attr(toDate()),\n        get wasChangedSinceCreation() {\n            return this.createdAt.getTime() === this.updatedAt.getTime();\n        },\n    },\n    {\n        /* base configuration */\n    },\n);\n")),(0,a.kt)("p",null,"Once your factory is ready, you can use in replacement of the classical\n",(0,a.kt)("inlineCode",{parentName:"p"},"makeModel"),", as it will have the same features."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"import makeModel from './makeModel';\n\nexport default class Post extends makeModel('posts', {\n    /* definition */\n}) {}\n")))}u.isMDXComponent=!0}}]);
"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3709],{9613:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>m});var r=t(9496);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),u=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=u(e.components);return r.createElement(l.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=u(t),m=a,f=d["".concat(l,".").concat(m)]||d[m]||p[m]||o;return t?r.createElement(f,i(i({ref:n},c),{},{components:t})):r.createElement(f,i({ref:n},c))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=d;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var u=2;u<o;u++)i[u]=t[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},208:(e,n,t)=>{t.d(n,{Z:()=>i});var r=t(9496),a=t(5924);const o="tabItem_IPoj";function i(e){let{children:n,hidden:t,className:i}=e;return r.createElement("div",{role:"tabpanel",className:(0,a.Z)(o,i),hidden:t},n)}},4210:(e,n,t)=>{t.d(n,{Z:()=>m});var r=t(4250),a=t(9496),o=t(5924),i=t(4375),s=t(4436),l=t(7883),u=t(4930);const c="tabList_xr86",p="tabItem_r4_W";function d(e){var n;const{lazy:t,block:i,defaultValue:d,values:m,groupId:f,className:h}=e,g=a.Children.map(e.children,(e=>{if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),y=m??g.map((e=>{let{props:{value:n,label:t,attributes:r}}=e;return{value:n,label:t,attributes:r}})),v=(0,s.l)(y,((e,n)=>e.value===n.value));if(v.length>0)throw new Error(`Docusaurus error: Duplicate values "${v.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const b=null===d?d:d??(null==(n=g.find((e=>e.props.default)))?void 0:n.props.value)??g[0].props.value;if(null!==b&&!y.some((e=>e.value===b)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${b}" but none of its children has the corresponding value. Available values are: ${y.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:x,setTabGroupChoices:k}=(0,l.U)(),[C,w]=(0,a.useState)(b),N=[],{blockElementScrollPositionUntilNextRender:T}=(0,u.o5)();if(null!=f){const e=x[f];null!=e&&e!==C&&y.some((n=>n.value===e))&&w(e)}const O=e=>{const n=e.currentTarget,t=N.indexOf(n),r=y[t].value;r!==C&&(T(n),w(r),null!=f&&k(f,String(r)))},D=e=>{var n;let t=null;switch(e.key){case"Enter":O(e);break;case"ArrowRight":{const n=N.indexOf(e.currentTarget)+1;t=N[n]??N[0];break}case"ArrowLeft":{const n=N.indexOf(e.currentTarget)-1;t=N[n]??N[N.length-1];break}}null==(n=t)||n.focus()};return a.createElement("div",{className:(0,o.Z)("tabs-container",c)},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":i},h)},y.map((e=>{let{value:n,label:t,attributes:i}=e;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:C===n?0:-1,"aria-selected":C===n,key:n,ref:e=>N.push(e),onKeyDown:D,onClick:O},i,{className:(0,o.Z)("tabs__item",p,null==i?void 0:i.className,{"tabs__item--active":C===n})}),t??n)}))),t?(0,a.cloneElement)(g.filter((e=>e.props.value===C))[0],{className:"margin-top--md"}):a.createElement("div",{className:"margin-top--md"},g.map(((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==C})))))}function m(e){const n=(0,i.Z)();return a.createElement(d,(0,r.Z)({key:String(n)},e))}},4847:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>m,frontMatter:()=>s,metadata:()=>u,toc:()=>p});var r=t(4250),a=(t(9496),t(9613)),o=t(208),i=t(4210);const s={sidebar_position:5,description:"Defining your own action runners and their associated extension."},l="Custom action runners",u={unversionedId:"advanced/custom-action-runners",id:"advanced/custom-action-runners",title:"Custom action runners",description:"Defining your own action runners and their associated extension.",source:"@site/docs/advanced/custom-action-runners.mdx",sourceDirName:"advanced",slug:"/advanced/custom-action-runners",permalink:"/func-client/docs/advanced/custom-action-runners",draft:!1,editUrl:"https://github.com/paul-thebaud/func-client/tree/main/website/docs/advanced/custom-action-runners.mdx",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,description:"Defining your own action runners and their associated extension."},sidebar:"docsSidebar",previous:{title:"Custom action enhancers",permalink:"/func-client/docs/advanced/custom-action-enhancers"},next:{title:"Custom action factory",permalink:"/func-client/docs/advanced/custom-action-factory"}},c={},p=[{value:"Goal",id:"goal",level:2},{value:"Defining the function",id:"defining-the-function",level:2},{value:"Using the function",id:"using-the-function",level:2},{value:"Defining the extension",id:"defining-the-extension",level:2}],d={toc:p};function m(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"custom-action-runners"},"Custom action runners"),(0,a.kt)("admonition",{title:"What you'll learn",type:"tip"},(0,a.kt)("ul",{parentName:"admonition"},(0,a.kt)("li",{parentName:"ul"},"Defining a custom action runner"),(0,a.kt)("li",{parentName:"ul"},"Providing an extension property to your runner"))),(0,a.kt)("p",null,"FuncClient tries to be agnostic of your data source, so sometimes you may\nrequire a custom runner to avoid code duplication."),(0,a.kt)("p",null,"This is a simple guide on defining a custom runner, but you may also inspire\nfrom any existing FuncClient runners."),(0,a.kt)("h2",{id:"goal"},"Goal"),(0,a.kt)("p",null,"Since FuncClient is pagination agnostic, providing a ",(0,a.kt)("inlineCode",{parentName:"p"},"first")," runner is\nnot possible. Here is what we want our new ",(0,a.kt)("inlineCode",{parentName:"p"},"first")," runner to do:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Limit the pagination to the first page and one record only"),(0,a.kt)("li",{parentName:"ul"},"Fetch the first record using the ",(0,a.kt)("inlineCode",{parentName:"li"},"one")," runner")),(0,a.kt)("p",null,"In this example, we will admit a JSON:API is used with the following query\nparameters working:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"page[number]")," describes the number of the page to fetch"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"page[size]")," describes the count of records to fetch (aka. limit)")),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"This guide is a runner version of the ",(0,a.kt)("inlineCode",{parentName:"p"},"first")," enhancer described in the\n",(0,a.kt)("a",{parentName:"p",href:"/docs/advanced/custom-action-enhancers"},(0,a.kt)("strong",{parentName:"a"},"custom enhancers guide")),".")),(0,a.kt)("h2",{id:"defining-the-function"},"Defining the function"),(0,a.kt)("p",null,"Our implementation of ",(0,a.kt)("inlineCode",{parentName:"p"},"first")," will paginate the context and fetch one instance."),(0,a.kt)(i.Z,{groupId:"language",defaultValue:"ts",values:[{label:"TypeScript",value:"ts"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},(0,a.kt)(o.Z,{value:"ts",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="action/runners/first.ts"',title:'"action/runners/first.ts"'},"import {\n    Action,\n    ConsumeAdapter,\n    ConsumeDeserializer,\n    ConsumeModel,\n    Model,\n    one,\n} from 'func-client/core';\nimport { paginate } from 'func-client/jsonapi';\n\nexport default function first<\n    Context extends {},\n    ContextModel extends Model,\n    ContextData,\n>() {\n    return (\n        action: Action<\n            Context &\n                ConsumeAdapter<ContextData> &\n                ConsumeDeserializer<ContextData> &\n                ConsumeModel<ContextModel>\n        >,\n    ) => action.use(paginate({ number: 1, size: 1 })).run(one());\n}\n"))),(0,a.kt)(o.Z,{value:"js",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="action/runners/first.ts"',title:'"action/runners/first.ts"'},"import { one } from 'func-client/core';\nimport { paginate } from 'func-client/jsonapi';\n\nexport default function first() {\n    return (action) => action.use(paginate({ number: 1, size: 1 })).run(one());\n}\n")))),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"Please note that when defining custom enhancers or runners, you should always\ncorrectly define generic types. This is very important as it will allow the\ncontext propagation through other enhancers and runners.")),(0,a.kt)("h2",{id:"using-the-function"},"Using the function"),(0,a.kt)("p",null,"Once your runner is ready, you may use it like any other FuncClient runner."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"import { forModel } from 'func-client/core';\nimport action from './action';\nimport first from './action/runners/first';\nimport Post from './models/post';\n\nconst post = await action()\n  .use(forModel(Post))\n  .run(first());\n")),(0,a.kt)("h2",{id:"defining-the-extension"},"Defining the extension"),(0,a.kt)("p",null,"Our current runner can only be used through an import and the ",(0,a.kt)("inlineCode",{parentName:"p"},"use")," method\nof our action. To make it available for the\n",(0,a.kt)("a",{parentName:"p",href:"/docs/actions#extensions"},"builder pattern style calls"),", we must define an\nextension for it."),(0,a.kt)("p",null,"There is currently a limitation of the TypeScript language (Higher Order types\nare not available for now) which forces us to declare each extension manually.\nThe goal of an extension definition is to strongly type the feature provided\nto our action (and so provide autocomplete, context propagation, etc.)."),(0,a.kt)("p",null,"Once your runner extension is ready, you will be able to use it\n",(0,a.kt)("a",{parentName:"p",href:"/docs/actions#extensions"},"as any other runners of FuncClient"),"."),(0,a.kt)(i.Z,{groupId:"language",defaultValue:"ts",values:[{label:"TypeScript",value:"ts"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},(0,a.kt)(o.Z,{value:"ts",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="action/runners/first.ts"',title:'"action/runners/first.ts"'},"import {\n    Action,\n    ActionParsedExtension,\n    ConsumeAdapter,\n    ConsumeDeserializer,\n    ConsumeModel,\n    Model,\n    makeRunnersExtension,\n    one,\n} from 'func-client/core';\nimport { paginate } from 'func-client/jsonapi';\n\n// Our previous enhancer code.\nexport default function first<\n    Context extends {},\n    ContextModel extends Model,\n    ContextData,\n>() {\n    return (\n        action: Action<\n            Context &\n                ConsumeAdapter<ContextData> &\n                ConsumeDeserializer<ContextData> &\n                ConsumeModel<ContextModel>\n        >,\n    ) => action.use(paginate({ number: 1, size: 1 })).run(one());\n}\n\n// The extension typing.\ntype FirstRunnerExtension = ActionParsedExtension<{\n    first<Context extends {}, ContextModel extends Model, ContextData>(\n        this: Action<\n            Context &\n                ConsumeAdapter<ContextData> &\n                ConsumeDeserializer<ContextData> &\n                ConsumeModel<ContextModel>\n        >,\n    ): Promise<InstanceType<ContextModel> | null>;\n}>;\n\n// The extension value.\nfirst.extension = makeRunnersExtension({ first }) as FirstRunnerExtension;\n"))),(0,a.kt)(o.Z,{value:"js",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="action/runners/first.ts"',title:'"action/runners/first.ts"'},"import { makeRunnersExtension, one } from 'func-client/core';\nimport { paginate } from 'func-client/jsonapi';\n\n// Our previous enhancer code.\nexport default function first() {\n    return (action) => action.use(paginate({ number: 1, size: 1 })).run(one());\n}\n\n// The extension value.\nfirst.extension = makeRunnersExtension({ first });\n")))),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"Here again, correctly typing our runner extension is really important to get\ncontext and action's extension propagation.")))}m.isMDXComponent=!0}}]);
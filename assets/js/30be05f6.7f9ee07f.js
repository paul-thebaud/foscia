"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6455],{9613:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>m});var a=t(9496);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=a.createContext({}),c=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=c(e.components);return a.createElement(l.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=c(t),m=r,h=d["".concat(l,".").concat(m)]||d[m]||p[m]||o;return t?a.createElement(h,i(i({ref:n},u),{},{components:t})):a.createElement(h,i({ref:n},u))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=d;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var c=2;c<o;c++)i[c]=t[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},6585:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var a=t(4250),r=(t(9496),t(9613));const o={sidebar_position:2,description:"Build actions, registering hooks, discover enhancers and runners."},i="Actions",s={unversionedId:"essentials/actions",id:"essentials/actions",title:"Actions",description:"Build actions, registering hooks, discover enhancers and runners.",source:"@site/docs/essentials/actions.md",sourceDirName:"essentials",slug:"/essentials/actions",permalink:"/func-client/docs/essentials/actions",draft:!1,editUrl:"https://github.com/paul-thebaud/func-client/tree/main/website/docs/essentials/actions.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,description:"Build actions, registering hooks, discover enhancers and runners."},sidebar:"tutorialSidebar",previous:{title:"Models",permalink:"/func-client/docs/essentials/models"},next:{title:"Advanced",permalink:"/func-client/docs/category/advanced"}},l={},c=[{value:"Instantiation",id:"instantiation",level:2},{value:"Enhancements",id:"enhancements",level:2},{value:"Run",id:"run",level:2},{value:"Conditionals",id:"conditionals",level:2},{value:"Hooks",id:"hooks",level:2}],u={toc:c};function p(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"actions"},"Actions"),(0,r.kt)("admonition",{title:"Requirements",type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"Before reading this guide, you should have a working action factory. You can\nread the ",(0,r.kt)("a",{parentName:"p",href:"/docs/getting-started#your-first-actions"},(0,r.kt)("strong",{parentName:"a"},"getting started guide")),"\nto quickly create your own action factory.")),(0,r.kt)("admonition",{title:"What you'll learn",type:"tip"},(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"Enhancing actions"),(0,r.kt)("li",{parentName:"ul"},"Running actions"),(0,r.kt)("li",{parentName:"ul"},"Registering hooks on actions"))),(0,r.kt)("h2",{id:"instantiation"},"Instantiation"),(0,r.kt)("p",null,"As stated in the ",(0,r.kt)("a",{parentName:"p",href:"/docs/getting-started#running-actions"},"getting started guide"),",\nactions are instantiated through your action factory. In this guide, we'll\nadmit you have a setup action factory."),(0,r.kt)("h2",{id:"enhancements"},"Enhancements"),(0,r.kt)("p",null,"An action instance may receive none to many enhancements, which will provide\nan appropriate context to run a request through data source."),(0,r.kt)("p",null,"Each enhancer can be applied using the ",(0,r.kt)("inlineCode",{parentName:"p"},"use")," action method.\nNote that those enhancers are not instantly applied to the action\ncontext, but during the action run step (or context computation)."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"action()\n  // Enhance the action.\n  .use(model(Post))\n  .use(include('comments'));\n")),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"All enhancers are listed in the\n",(0,r.kt)("a",{parentName:"p",href:"/docs/api/actions-enhancers"},(0,r.kt)("strong",{parentName:"a"},"actions' available enhancers API guide")),".")),(0,r.kt)("h2",{id:"run"},"Run"),(0,r.kt)("p",null,"An action instance can be run using the ",(0,r.kt)("inlineCode",{parentName:"p"},"run")," method. The runner may use\nenhancers or runners internally."),(0,r.kt)("p",null,"When an action run, it does 3 things:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Dequeue all enhancers since the action instantiation and build context"),(0,r.kt)("li",{parentName:"ul"},"Execute the runner and each of its internal enhancers/runners (this may update\nthe context)"),(0,r.kt)("li",{parentName:"ul"},"Return the runner's result (might be any value, including void or an error\nthrowing)")),(0,r.kt)("p",null,"Internally, action running will also trigger ",(0,r.kt)("a",{parentName:"p",href:"#hooks"},"actions hooks"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"action()\n  .use(model(Post))\n  .use(include('comments'))\n  // Run the action.\n  .run(all());\n")),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"All runners are listed in the\n",(0,r.kt)("a",{parentName:"p",href:"/docs/api/actions-runners"},(0,r.kt)("strong",{parentName:"a"},"actions' available runners API guide")),".")),(0,r.kt)("h2",{id:"conditionals"},"Conditionals"),(0,r.kt)("p",null,"Sometimes, you may need to conditionally apply an enhancer or run an action.\nAs an example, you may want to sort results differently based on the user's\ndefined sort's direction. This can be done easily using the ",(0,r.kt)("inlineCode",{parentName:"p"},"when")," helper:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import { when } from 'func-client/core';\nimport { sortByDesc } from 'func-client/jsonapi';\n\naction()\n  .use(model(Post))\n  .use(when(\n    displayLatestFirst,\n    sortByDesc('createdAt'),\n  ));\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"when")," returns a new enhancer or runner depending on the given value's\n",(0,r.kt)("em",{parentName:"p"},"truthiness"),". It will execute the first enhancer/runner only if its value is\n",(0,r.kt)("em",{parentName:"p"},"truthy"),". You may pass the value as a factory function returning the value.\nYou may also pass a second enhancer/runner which will only execute if the value\nis ",(0,r.kt)("em",{parentName:"p"},"falsy"),".\nEach callback arguments will receive the action as their first argument and the\nvalue as their second argument. Each callback may also be async, as any\nenhancers and runners."),(0,r.kt)("p",null,"Here are further examples:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import { changed, create, oneOrFail, when } from 'func-client/core';\n\nconst post = fill(new Post(), userInputData);\n\naction()\n  .use(create(post))\n  .use(when(\n    () => /* compute a special value */,\n    (a, specialTruthyValue) => /* do something */,\n    (a, specialFalsyValue) => /* do something */,\n  ))\n  .run(when(\n    changed(post),\n    oneOrFail(),\n    () => post,\n  ));\n")),(0,r.kt)("h2",{id:"hooks"},"Hooks"),(0,r.kt)("p",null,"You may hook on multiple events which occurs on action instance using the hook\nregistration function:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"onPreparing"),": before context computation through enhancers dequeueing."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"onRunning"),": after context computation, before context runner execution."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"onSuccess"),": after context runner successful execution (no error thrown)."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"onError"),": after context runner failed execution (error thrown)."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"onFinally"),": after context runner successful or failed execution.")),(0,r.kt)("p",null,"To register a hook callback, you must use the registration enhancer on your\nbuilding action."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import {\n  onPreparing,\n  onRunning,\n  onSuccess,\n  onError,\n  onFinally\n} from 'func-client/core';\n\naction().use(onPreparing(() => /* ... */));\naction().use(onRunning(({ context }) => /* ... */));\naction().use(onSuccess(({ context, result }) => /* ... */));\naction().use(onError(({ context, error }) => /* ... */));\naction().use(onFinally(({ context }) => /* ... */));\n")),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Hooks callback may be async and will be ran sequentially\n(one by one, not parallelized).")),(0,r.kt)("p",null,"You can disable hook execution on a given action instance by using the\n",(0,r.kt)("inlineCode",{parentName:"p"},"withoutHooks")," function."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import { withoutHooks } from 'func-client/core';\n\nconst users = await withoutHooks(action(), async (a) => {\n  return await a.use(model(User)).run(all());\n});\n")),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"FuncClient may also register hooks internally when using some enhancers.\nThose provide some library features\n(",(0,r.kt)("a",{parentName:"p",href:"/docs/essentials/models#hooks"},(0,r.kt)("strong",{parentName:"a"},"models hooks")),", etc.).\nBe careful running actions without hooks, as those hooks will also be disable.")))}p.isMDXComponent=!0}}]);
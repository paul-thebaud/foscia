"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3876],{9613:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>u});var i=n(9496);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=i.createContext({}),c=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return i.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},d=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(n),u=r,h=d["".concat(s,".").concat(u)]||d[u]||m[u]||a;return n?i.createElement(h,o(o({ref:t},p),{},{components:n})):i.createElement(h,o({ref:t},p))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var c=2;c<a;c++)o[c]=n[c];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2315:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>m,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var i=n(4250),r=(n(9496),n(9613));const a={sidebar_position:1,description:"Quick introduction on available implementations for FuncClient."},o="Presentation",l={unversionedId:"advanced/implementations/presentation",id:"advanced/implementations/presentation",title:"Presentation",description:"Quick introduction on available implementations for FuncClient.",source:"@site/docs/advanced/implementations/presentation.md",sourceDirName:"advanced/implementations",slug:"/advanced/implementations/presentation",permalink:"/func-client/docs/advanced/implementations/presentation",draft:!1,editUrl:"https://github.com/paul-thebaud/func-client/tree/main/website/docs/advanced/implementations/presentation.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,description:"Quick introduction on available implementations for FuncClient."},sidebar:"docsSidebar",previous:{title:"Implementations",permalink:"/func-client/docs/category/implementations"},next:{title:"JSON:API",permalink:"/func-client/docs/advanced/implementations/jsonapi"}},s={},c=[{value:"Introduction",id:"introduction",level:2},{value:"Core implementation",id:"core-implementation",level:2},{value:"Cache through <code>RefsCache</code>",id:"cache-through-refscache",level:3},{value:"Registry through <code>MapRegistry</code>",id:"registry-through-mapregistry",level:3},{value:"HTTP implementation",id:"http-implementation",level:2},{value:"JSON implementation",id:"json-implementation",level:2},{value:"JSON:API implementation",id:"jsonapi-implementation",level:2},{value:"JSON REST implementation",id:"json-rest-implementation",level:2}],p={toc:c};function m(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,i.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"presentation"},"Presentation"),(0,r.kt)("h2",{id:"introduction"},"Introduction"),(0,r.kt)("p",null,"FuncClient actions might require one or many dependencies to work:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Cache")," will store already fetched models instances. It will avoid\nmultiple instances of the same record coexisting and allows you to retrieve\nalready fetched record without making further requests to your data source."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Registry")," is a map of types and associated model. It is used by\ndeserializer to identify which models should map to which types."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Serializer")," will serialize instances to the data source format."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Deserializer")," will deserialize records to instances. It might use the\ncache and registry internally."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Adapter")," create the exchange between your actions' built context and your\ndata source. As an example, it will ",(0,r.kt)("em",{parentName:"li"},"translate")," the context to an HTTP\nrequest when using JSON:API or JSON REST implementations.")),(0,r.kt)("p",null,"Some dependencies have a common implementation through the core and some may\nhave a specific implementation (HTTP, JSON:API, etc.)."),(0,r.kt)("h2",{id:"core-implementation"},"Core implementation"),(0,r.kt)("p",null,"FuncClient propose core implementation for the ",(0,r.kt)("inlineCode",{parentName:"p"},"Cache")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"Registry")," actions'\ndependencies. Both classes are available through ",(0,r.kt)("inlineCode",{parentName:"p"},"func-client/core")," namespace\nand both factory are available through ",(0,r.kt)("inlineCode",{parentName:"p"},"func-client/blueprints"),"."),(0,r.kt)("p",null,"Those dependencies may be used with any implementations."),(0,r.kt)("h3",{id:"cache-through-refscache"},"Cache through ",(0,r.kt)("inlineCode",{parentName:"h3"},"RefsCache")),(0,r.kt)("span",{className:"chip chip--primary"},"Work in progress"),(0,r.kt)("h3",{id:"registry-through-mapregistry"},"Registry through ",(0,r.kt)("inlineCode",{parentName:"h3"},"MapRegistry")),(0,r.kt)("span",{className:"chip chip--primary"},"Work in progress"),(0,r.kt)("h2",{id:"http-implementation"},"HTTP implementation"),(0,r.kt)("span",{className:"chip chip--primary"},"Work in progress"),(0,r.kt)("h2",{id:"json-implementation"},"JSON implementation"),(0,r.kt)("span",{className:"chip chip--primary"},"Work in progress"),(0,r.kt)("h2",{id:"jsonapi-implementation"},"JSON:API implementation"),(0,r.kt)("span",{className:"chip chip--primary"},"Work in progress"),(0,r.kt)("h2",{id:"json-rest-implementation"},"JSON REST implementation"),(0,r.kt)("span",{className:"chip chip--primary"},"Work in progress"))}m.isMDXComponent=!0}}]);
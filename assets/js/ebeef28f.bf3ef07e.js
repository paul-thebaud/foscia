"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2598],{9613:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>d});var a=n(9496);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,i=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),c=p(n),d=l,k=c["".concat(s,".").concat(d)]||c[d]||m[d]||i;return n?a.createElement(k,r(r({ref:t},u),{},{components:n})):a.createElement(k,r({ref:t},u))}));function d(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var i=n.length,r=new Array(i);r[0]=c;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:l,r[1]=o;for(var p=2;p<i;p++)r[p]=n[p];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},208:(e,t,n)=>{n.d(t,{Z:()=>r});var a=n(9496),l=n(5924);const i="tabItem_IPoj";function r(e){let{children:t,hidden:n,className:r}=e;return a.createElement("div",{role:"tabpanel",className:(0,l.Z)(i,r),hidden:n},t)}},4210:(e,t,n)=>{n.d(t,{Z:()=>d});var a=n(4250),l=n(9496),i=n(5924),r=n(4375),o=n(4436),s=n(7883),p=n(4930);const u="tabList_xr86",m="tabItem_r4_W";function c(e){var t;const{lazy:n,block:r,defaultValue:c,values:d,groupId:k,className:h}=e,f=l.Children.map(e.children,(e=>{if((0,l.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),g=d??f.map((e=>{let{props:{value:t,label:n,attributes:a}}=e;return{value:t,label:n,attributes:a}})),v=(0,o.l)(g,((e,t)=>e.value===t.value));if(v.length>0)throw new Error(`Docusaurus error: Duplicate values "${v.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const N=null===c?c:c??(null==(t=f.find((e=>e.props.default)))?void 0:t.props.value)??f[0].props.value;if(null!==N&&!g.some((e=>e.value===N)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${N}" but none of its children has the corresponding value. Available values are: ${g.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:x,setTabGroupChoices:y}=(0,s.U)(),[b,C]=(0,l.useState)(N),T=[],{blockElementScrollPositionUntilNextRender:E}=(0,p.o5)();if(null!=k){const e=x[k];null!=e&&e!==b&&g.some((t=>t.value===e))&&C(e)}const A=e=>{const t=e.currentTarget,n=T.indexOf(t),a=g[n].value;a!==b&&(E(t),C(a),null!=k&&y(k,String(a)))},I=e=>{var t;let n=null;switch(e.key){case"Enter":A(e);break;case"ArrowRight":{const t=T.indexOf(e.currentTarget)+1;n=T[t]??T[0];break}case"ArrowLeft":{const t=T.indexOf(e.currentTarget)-1;n=T[t]??T[T.length-1];break}}null==(t=n)||t.focus()};return l.createElement("div",{className:(0,i.Z)("tabs-container",u)},l.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":r},h)},g.map((e=>{let{value:t,label:n,attributes:r}=e;return l.createElement("li",(0,a.Z)({role:"tab",tabIndex:b===t?0:-1,"aria-selected":b===t,key:t,ref:e=>T.push(e),onKeyDown:I,onClick:A},r,{className:(0,i.Z)("tabs__item",m,null==r?void 0:r.className,{"tabs__item--active":b===t})}),n??t)}))),n?(0,l.cloneElement)(f.filter((e=>e.props.value===b))[0],{className:"margin-top--md"}):l.createElement("div",{className:"margin-top--md"},f.map(((e,t)=>(0,l.cloneElement)(e,{key:t,hidden:e.props.value!==b})))))}function d(e){const t=(0,r.Z)();return l.createElement(c,(0,a.Z)({key:String(t)},e))}},5834:(e,t,n)=>{n.d(t,{Z:()=>l});var a=n(9496);function l(e){let{children:t,color:n}=e;return a.createElement("span",{className:`chip ${n&&`chip--${n}`}`},t)}},7063:(e,t,n)=>{n.d(t,{Z:()=>i});var a=n(9496),l=n(5834);function i(e){let{children:t,version:n,only:i,requires:r,provides:o}=e;return a.createElement("div",{style:{marginBottom:"12px"}},n&&a.createElement(l.Z,null,n),i&&a.createElement(l.Z,{color:"primary"},"only: ",i),r&&a.createElement(l.Z,{color:"danger"},"requires: ",r),o&&a.createElement(l.Z,{color:"success"},"provides: ",o),t)}},3970:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>p,toc:()=>m});var a=n(4250),l=(n(9496),n(9613)),i=(n(208),n(4210),n(5834)),r=n(7063);const o={sidebar_position:2,description:"Available actions enhancers."},s="Actions enhancers",p={unversionedId:"api/actions-enhancers",id:"api/actions-enhancers",title:"Actions enhancers",description:"Available actions enhancers.",source:"@site/docs/api/actions-enhancers.mdx",sourceDirName:"api",slug:"/api/actions-enhancers",permalink:"/func-client/docs/api/actions-enhancers",draft:!1,editUrl:"https://github.com/paul-thebaud/func-client/tree/main/website/docs/api/actions-enhancers.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,description:"Available actions enhancers."},sidebar:"docsSidebar",previous:{title:"Models utilities",permalink:"/func-client/docs/api/models-utilities"},next:{title:"Actions runners",permalink:"/func-client/docs/api/actions-runners"}},u={},m=[{value:"Note",id:"note",level:2},{value:"Common",id:"common",level:2},{value:"<code>context</code>",id:"context",level:3},{value:"Example",id:"example",level:4},{value:"Arguments",id:"arguments",level:4},{value:"<code>target</code>",id:"target",level:3},{value:"Example",id:"example-1",level:4},{value:"Arguments",id:"arguments-1",level:4},{value:"<code>forModel</code>",id:"formodel",level:3},{value:"Example",id:"example-2",level:4},{value:"Arguments",id:"arguments-2",level:4},{value:"<code>forInstance</code>",id:"forinstance",level:3},{value:"Example",id:"example-3",level:4},{value:"Arguments",id:"arguments-3",level:4},{value:"<code>forId</code>",id:"forid",level:3},{value:"Example",id:"example-4",level:4},{value:"Arguments",id:"arguments-4",level:4},{value:"<code>find</code>",id:"find",level:3},{value:"Example",id:"example-5",level:4},{value:"Arguments",id:"arguments-5",level:4},{value:"<code>create</code>",id:"create",level:3},{value:"Example",id:"example-6",level:4},{value:"Arguments",id:"arguments-6",level:4},{value:"<code>update</code>",id:"update",level:3},{value:"Example",id:"example-7",level:4},{value:"Arguments",id:"arguments-7",level:4},{value:"<code>save</code>",id:"save",level:3},{value:"Example",id:"example-8",level:4},{value:"Arguments",id:"arguments-8",level:4},{value:"<code>destroy</code>",id:"destroy",level:3},{value:"Example",id:"example-9",level:4},{value:"Arguments",id:"arguments-9",level:4},{value:"<code>instanceData</code>",id:"instancedata",level:3},{value:"Example",id:"example-10",level:4},{value:"Arguments",id:"arguments-10",level:4},{value:"<code>include</code>",id:"include",level:3},{value:"Example",id:"example-11",level:4},{value:"Arguments",id:"arguments-11",level:4},{value:"HTTP",id:"http",level:2},{value:"<code>makeGet</code>",id:"makeget",level:3},{value:"Example",id:"example-12",level:4},{value:"Arguments",id:"arguments-12",level:4},{value:"<code>makePost</code>",id:"makepost",level:3},{value:"Example",id:"example-13",level:4},{value:"Arguments",id:"arguments-13",level:4},{value:"<code>makePut</code>",id:"makeput",level:3},{value:"Example",id:"example-14",level:4},{value:"Arguments",id:"arguments-14",level:4},{value:"<code>makePatch</code>",id:"makepatch",level:3},{value:"Example",id:"example-15",level:4},{value:"Arguments",id:"arguments-15",level:4},{value:"<code>makeDelete</code>",id:"makedelete",level:3},{value:"Example",id:"example-16",level:4},{value:"Arguments",id:"arguments-16",level:4},{value:"<code>makeRequest</code>",id:"makerequest",level:3},{value:"Example",id:"example-17",level:4},{value:"Arguments",id:"arguments-17",level:4},{value:"<code>param</code>",id:"param",level:3},{value:"Example",id:"example-18",level:4},{value:"Arguments",id:"arguments-18",level:4},{value:"<code>abortSignal</code>",id:"abortsignal",level:3},{value:"Example",id:"example-19",level:4},{value:"Arguments",id:"arguments-19",level:4},{value:"JSON:API",id:"jsonapi",level:2},{value:"<code>fields</code>",id:"fields",level:3},{value:"Example",id:"example-20",level:4},{value:"Arguments",id:"arguments-20",level:4},{value:"<code>fieldsFor</code>",id:"fieldsfor",level:3},{value:"Example",id:"example-21",level:4},{value:"Arguments",id:"arguments-21",level:4},{value:"<code>filterBy</code>",id:"filterby",level:3},{value:"Example",id:"example-22",level:4},{value:"Arguments",id:"arguments-22",level:4},{value:"<code>sortBy</code>",id:"sortby",level:3},{value:"Example",id:"example-23",level:4},{value:"Arguments",id:"arguments-23",level:4},{value:"<code>sortByDesc</code>",id:"sortbydesc",level:3},{value:"Example",id:"example-24",level:4},{value:"Arguments",id:"arguments-24",level:4},{value:"<code>paginate</code>",id:"paginate",level:3},{value:"Example",id:"example-25",level:4},{value:"Arguments",id:"arguments-25",level:4},{value:"Hooks",id:"hooks",level:2},{value:"<code>onPreparing</code>",id:"onpreparing",level:3},{value:"Example",id:"example-26",level:4},{value:"Arguments",id:"arguments-26",level:4},{value:"<code>onRunning</code>",id:"onrunning",level:3},{value:"Example",id:"example-27",level:4},{value:"Arguments",id:"arguments-27",level:4},{value:"<code>onSuccess</code>",id:"onsuccess",level:3},{value:"Example",id:"example-28",level:4},{value:"Arguments",id:"arguments-28",level:4},{value:"<code>onError</code>",id:"onerror",level:3},{value:"Example",id:"example-29",level:4},{value:"Arguments",id:"arguments-29",level:4},{value:"<code>onFinally</code>",id:"onfinally",level:3},{value:"Example",id:"example-30",level:4},{value:"Arguments",id:"arguments-30",level:4}],c={toc:m};function d(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"actions-enhancers"},"Actions enhancers"),(0,l.kt)("h2",{id:"note"},"Note"),(0,l.kt)("p",null,"Many actions enhancers are available. Each may:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)(i.Z,{mdxType:"Chip"},"depend")," on a minimal package version"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)(i.Z,{color:"primary",mdxType:"Chip"},"only")," be available in a given use case (JSON:API, REST, HTTP, etc.)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)(i.Z,{color:"success",mdxType:"Chip"},"provide")," a given context to next enhancers or runners"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)(i.Z,{color:"danger",mdxType:"Chip"},"require")," a given context from previous enhancers or runners")),(0,l.kt)("p",null,"Examples of this guide will omit imports of your action factories or models to\nprovide shorter examples."),(0,l.kt)("h2",{id:"common"},"Common"),(0,l.kt)("h3",{id:"context"},(0,l.kt)("inlineCode",{parentName:"h3"},"context")),(0,l.kt)("p",null,"Merge the given context into the action's current context.\n",(0,l.kt)("strong",{parentName:"p"},"The context is not deeply merged.")),(0,l.kt)("p",null,"This is the most basic context enhancer. It is used by a lot of FuncClient\nenhancers."),(0,l.kt)("h4",{id:"example"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"import { context } from 'func-client/core';\n\naction().use(context({ /* additional context */ }));\n")),(0,l.kt)("h4",{id:"arguments"},"Arguments"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"{{}}")," ",(0,l.kt)("inlineCode",{parentName:"li"},"contextToMerge"),"\na context object to merge into the action's current context")),(0,l.kt)("h3",{id:"target"},(0,l.kt)("inlineCode",{parentName:"h3"},"target")),(0,l.kt)(r.Z,{provides:"Model",mdxType:"FunctionInfo"}),(0,l.kt)("p",null,"Only target the given model."),(0,l.kt)("p",null,"In most cases, you should use (",(0,l.kt)("a",{parentName:"p",href:"#model"},(0,l.kt)("inlineCode",{parentName:"a"},"model")),", ",(0,l.kt)("a",{parentName:"p",href:"#find"},(0,l.kt)("inlineCode",{parentName:"a"},"find"))," or any other\nmodel's enhancers instead of ",(0,l.kt)("inlineCode",{parentName:"p"},"target"),"."),(0,l.kt)("h4",{id:"example-1"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"import { target } from 'func-client/core';\n\naction().use(target(Post));\n")),(0,l.kt)("h4",{id:"arguments-1"},"Arguments"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/api/func-client/modules/core#model"},(0,l.kt)("inlineCode",{parentName:"a"},"{M extends Model}"))," ",(0,l.kt)("inlineCode",{parentName:"li"},"model")," the model class to use")),(0,l.kt)("h3",{id:"formodel"},(0,l.kt)("inlineCode",{parentName:"h3"},"forModel")),(0,l.kt)(r.Z,{provides:"Model, Type",mdxType:"FunctionInfo"}),(0,l.kt)("p",null,"Target the given model."),(0,l.kt)("p",null,"Use its type and other applicable model's context."),(0,l.kt)("h4",{id:"example-2"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"import { forModel } from 'func-client/core';\n\naction().use(forModel(Post));\n")),(0,l.kt)("h4",{id:"arguments-2"},"Arguments"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/api/func-client/modules/core#model"},(0,l.kt)("inlineCode",{parentName:"a"},"{M extends Model}"))," ",(0,l.kt)("inlineCode",{parentName:"li"},"model")," the model class to use")),(0,l.kt)("h3",{id:"forinstance"},(0,l.kt)("inlineCode",{parentName:"h3"},"forInstance")),(0,l.kt)(r.Z,{provides:"Model, Instance, Type, ID",mdxType:"FunctionInfo"}),(0,l.kt)("p",null,"Target the given model."),(0,l.kt)("p",null,"Use its type and other applicable model's context."),(0,l.kt)("h4",{id:"example-3"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"import { forInstance } from 'func-client/core';\n\naction().use(forInstance(post));\n")),(0,l.kt)("h4",{id:"arguments-3"},"Arguments"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/api/func-client/modules/core#modelinstance"},(0,l.kt)("inlineCode",{parentName:"a"},"{I extends ModelInstance}"))," ",(0,l.kt)("inlineCode",{parentName:"li"},"instance")," the instance to use")),(0,l.kt)("h3",{id:"forid"},(0,l.kt)("inlineCode",{parentName:"h3"},"forId")),(0,l.kt)(r.Z,{provides:"ID",mdxType:"FunctionInfo"}),(0,l.kt)("p",null,"Target the given ID."),(0,l.kt)("h4",{id:"example-4"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"import { forId } from 'func-client/core';\n\naction().use(forId('123'));\n")),(0,l.kt)("h4",{id:"arguments-4"},"Arguments"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/api/func-client/modules/core#modelid"},(0,l.kt)("inlineCode",{parentName:"a"},"{ModelId | undefined}"))," ",(0,l.kt)("inlineCode",{parentName:"li"},"id")," the ID to use")),(0,l.kt)("h3",{id:"find"},(0,l.kt)("inlineCode",{parentName:"h3"},"find")),(0,l.kt)(r.Z,{provides:"Model, Type, ID",mdxType:"FunctionInfo"}),(0,l.kt)("p",null,"Target a given model record using its ID."),(0,l.kt)("h4",{id:"example-5"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"import { find } from 'func-client/core';\n\naction().use(find(Post, '123'));\n")),(0,l.kt)("h4",{id:"arguments-5"},"Arguments"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/api/func-client/modules/core#model"},(0,l.kt)("inlineCode",{parentName:"a"},"{M extends Model}"))," ",(0,l.kt)("inlineCode",{parentName:"li"},"model")," the model class to use"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/api/func-client/modules/core#modelid"},(0,l.kt)("inlineCode",{parentName:"a"},"{ModelId}"))," ",(0,l.kt)("inlineCode",{parentName:"li"},"id")," the ID to use")),(0,l.kt)("h3",{id:"create"},(0,l.kt)("inlineCode",{parentName:"h3"},"create")),(0,l.kt)(r.Z,{requires:"Serializer",provides:"Model, Instance, Type, ID",mdxType:"FunctionInfo"}),(0,l.kt)("p",null,"Prepare context for an instance creation."),(0,l.kt)("h4",{id:"example-6"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"import { create } from 'func-client/core';\n\nconst post = new Post();\naction().use(create(post));\n")),(0,l.kt)("h4",{id:"arguments-6"},"Arguments"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/api/func-client/modules/core#modelinstance"},(0,l.kt)("inlineCode",{parentName:"a"},"{I extends ModelInstance}")),(0,l.kt)("inlineCode",{parentName:"li"},"instance")," an instance of model to create")),(0,l.kt)("h3",{id:"update"},(0,l.kt)("inlineCode",{parentName:"h3"},"update")),(0,l.kt)(r.Z,{requires:"Serializer",provides:"Model, Instance, Type, ID",mdxType:"FunctionInfo"}),(0,l.kt)("p",null,"Prepare context for an instance update."),(0,l.kt)("h4",{id:"example-7"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"import { update } from 'func-client/core';\n\naction().use(update(post));\n")),(0,l.kt)("h4",{id:"arguments-7"},"Arguments"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/api/func-client/modules/core#modelinstance"},(0,l.kt)("inlineCode",{parentName:"a"},"{I extends ModelInstance}")),(0,l.kt)("inlineCode",{parentName:"li"},"instance")," an instance of model to update")),(0,l.kt)("h3",{id:"save"},(0,l.kt)("inlineCode",{parentName:"h3"},"save")),(0,l.kt)(r.Z,{requires:"Serializer",provides:"Model, Instance, Type, ID",mdxType:"FunctionInfo"}),(0,l.kt)("p",null,"Prepare context for an instance creation or update depending on its existence\nstate. Calls ",(0,l.kt)("inlineCode",{parentName:"p"},"update")," if the instance exists, otherwise call ",(0,l.kt)("inlineCode",{parentName:"p"},"create"),"."),(0,l.kt)("h4",{id:"example-8"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"import { save } from 'func-client/core';\n\naction().use(save(post));\n")),(0,l.kt)("h4",{id:"arguments-8"},"Arguments"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/api/func-client/modules/core#modelinstance"},(0,l.kt)("inlineCode",{parentName:"a"},"{I extends ModelInstance}")),(0,l.kt)("inlineCode",{parentName:"li"},"instance")," an instance of model to save")),(0,l.kt)("h3",{id:"destroy"},(0,l.kt)("inlineCode",{parentName:"h3"},"destroy")),(0,l.kt)(r.Z,{provides:"Model, Instance, Type, ID",mdxType:"FunctionInfo"}),(0,l.kt)("p",null,"Prepare context for an instance deletion."),(0,l.kt)("h4",{id:"example-9"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"import { destroy } from 'func-client/core';\n\naction().use(destroy(post));\n")),(0,l.kt)("h4",{id:"arguments-9"},"Arguments"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/api/func-client/modules/core#modelinstance"},(0,l.kt)("inlineCode",{parentName:"a"},"{I extends ModelInstance}")),(0,l.kt)("inlineCode",{parentName:"li"},"instance")," an instance of model to delete")),(0,l.kt)("h3",{id:"instancedata"},(0,l.kt)("inlineCode",{parentName:"h3"},"instanceData")),(0,l.kt)(r.Z,{requires:"Serializer",mdxType:"FunctionInfo"}),(0,l.kt)("p",null,"Serialize the given instance as the context's data."),(0,l.kt)("h4",{id:"example-10"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"import { instanceData } from 'func-client/core';\n\naction().use(instanceData(post));\n")),(0,l.kt)("h4",{id:"arguments-10"},"Arguments"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/api/func-client/modules/core#modelinstance"},(0,l.kt)("inlineCode",{parentName:"a"},"{I extends ModelInstance}")),(0,l.kt)("inlineCode",{parentName:"li"},"instance")," an instance of model to serialize")),(0,l.kt)("h3",{id:"include"},(0,l.kt)("inlineCode",{parentName:"h3"},"include")),(0,l.kt)(r.Z,{requires:"Model",mdxType:"FunctionInfo"}),(0,l.kt)("p",null,"Eager load the given relations for the current model definition. It accepts\ndeep relations through dot notation. The new relations will be merged with\nthe previous ones."),(0,l.kt)("h4",{id:"example-11"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"import { include } from 'func-client/core';\n\naction().use(include('author'));\naction().use(include('author', 'comments', 'comments.reactions'));\naction().use(include(['author', 'comments', 'comments.reactions']));\n")),(0,l.kt)("h4",{id:"arguments-11"},"Arguments"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/api/func-client/modules/core#modelrelationdotkey"},(0,l.kt)("inlineCode",{parentName:"a"},"{ArrayableVariadic<ModelRelationDotKey<M>>}")),(0,l.kt)("inlineCode",{parentName:"li"},"...relations")," a relation or a set of relation to eager load")),(0,l.kt)("h2",{id:"http"},"HTTP"),(0,l.kt)("h3",{id:"makeget"},(0,l.kt)("inlineCode",{parentName:"h3"},"makeGet")),(0,l.kt)(r.Z,{only:"HTTP",mdxType:"FunctionInfo"}),(0,l.kt)("p",null,"HTTP GET method shortcut for the ",(0,l.kt)("a",{parentName:"p",href:"#makerequest"},(0,l.kt)("inlineCode",{parentName:"a"},"makeRequest")," function"),"."),(0,l.kt)("h4",{id:"example-12"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"import { makeGet } from 'func-client/http';\n\naction().use(makeGet('https://example.com', { /* config */ }));\n")),(0,l.kt)("h4",{id:"arguments-12"},"Arguments"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"{string}")," ",(0,l.kt)("inlineCode",{parentName:"li"},"pathOrBaseURL")," a path or base URL for the request"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/api/func-client/modules/http#httprequestconfig"},(0,l.kt)("inlineCode",{parentName:"a"},"{HttpRequestConfig | undefined}"))," ",(0,l.kt)("inlineCode",{parentName:"li"},"config"),"\na request configuration object")),(0,l.kt)("h3",{id:"makepost"},(0,l.kt)("inlineCode",{parentName:"h3"},"makePost")),(0,l.kt)(r.Z,{only:"HTTP",mdxType:"FunctionInfo"}),(0,l.kt)("p",null,"HTTP POST method shortcut for the ",(0,l.kt)("a",{parentName:"p",href:"#makerequest"},(0,l.kt)("inlineCode",{parentName:"a"},"makeRequest")," function"),"."),(0,l.kt)("h4",{id:"example-13"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"import { makePost } from 'func-client/http';\n\naction().use(makePost('https://example.com', { data: 'foobar' }, { /* config */ }));\n")),(0,l.kt)("h4",{id:"arguments-13"},"Arguments"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"{string}")," ",(0,l.kt)("inlineCode",{parentName:"li"},"pathOrBaseURL")," a path or base URL for the request"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/api/func-client/modules/http#httprequestconfig"},(0,l.kt)("inlineCode",{parentName:"a"},"{HttpRequestConfig['body'] | undefined}"))," ",(0,l.kt)("inlineCode",{parentName:"li"},"body"),"\na request body"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/api/func-client/modules/http#httprequestconfig"},(0,l.kt)("inlineCode",{parentName:"a"},"{HttpRequestConfig | undefined}"))," ",(0,l.kt)("inlineCode",{parentName:"li"},"config"),"\na request configuration object")),(0,l.kt)("h3",{id:"makeput"},(0,l.kt)("inlineCode",{parentName:"h3"},"makePut")),(0,l.kt)(r.Z,{only:"HTTP",mdxType:"FunctionInfo"}),(0,l.kt)("p",null,"HTTP PUT method shortcut for the ",(0,l.kt)("a",{parentName:"p",href:"#makerequest"},(0,l.kt)("inlineCode",{parentName:"a"},"makeRequest")," function"),"."),(0,l.kt)("h4",{id:"example-14"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"import { makePut } from 'func-client/http';\n\naction().use(makePut('https://example.com', { data: 'foobar' }, { /* config */ }));\n")),(0,l.kt)("h4",{id:"arguments-14"},"Arguments"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"{string}")," ",(0,l.kt)("inlineCode",{parentName:"li"},"pathOrBaseURL")," a path or base URL for the request"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/api/func-client/modules/http#httprequestconfig"},(0,l.kt)("inlineCode",{parentName:"a"},"{HttpRequestConfig['body'] | undefined}"))," ",(0,l.kt)("inlineCode",{parentName:"li"},"body"),"\na request body"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/api/func-client/modules/http#httprequestconfig"},(0,l.kt)("inlineCode",{parentName:"a"},"{HttpRequestConfig | undefined}"))," ",(0,l.kt)("inlineCode",{parentName:"li"},"config"),"\na request configuration object")),(0,l.kt)("h3",{id:"makepatch"},(0,l.kt)("inlineCode",{parentName:"h3"},"makePatch")),(0,l.kt)(r.Z,{only:"HTTP",mdxType:"FunctionInfo"}),(0,l.kt)("p",null,"HTTP PATCH method shortcut for the ",(0,l.kt)("a",{parentName:"p",href:"#makerequest"},(0,l.kt)("inlineCode",{parentName:"a"},"makeRequest")," function"),"."),(0,l.kt)("h4",{id:"example-15"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"import { makePatch } from 'func-client/http';\n\naction().use(makePatch('https://example.com', { data: 'foobar' }, { /* config */ }));\n")),(0,l.kt)("h4",{id:"arguments-15"},"Arguments"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"{string}")," ",(0,l.kt)("inlineCode",{parentName:"li"},"pathOrBaseURL")," a path or base URL for the request"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/api/func-client/modules/http#httprequestconfig"},(0,l.kt)("inlineCode",{parentName:"a"},"{HttpRequestConfig['body'] | undefined}"))," ",(0,l.kt)("inlineCode",{parentName:"li"},"body"),"\na request body"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/api/func-client/modules/http#httprequestconfig"},(0,l.kt)("inlineCode",{parentName:"a"},"{HttpRequestConfig | undefined}"))," ",(0,l.kt)("inlineCode",{parentName:"li"},"config"),"\na request configuration object")),(0,l.kt)("h3",{id:"makedelete"},(0,l.kt)("inlineCode",{parentName:"h3"},"makeDelete")),(0,l.kt)(r.Z,{only:"HTTP",mdxType:"FunctionInfo"}),(0,l.kt)("p",null,"HTTP DELETE method shortcut for the ",(0,l.kt)("a",{parentName:"p",href:"#makerequest"},(0,l.kt)("inlineCode",{parentName:"a"},"makeRequest")," function"),"."),(0,l.kt)("h4",{id:"example-16"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"import { makeDelete } from 'func-client/http';\n\naction().use(makeDelete('https://example.com', { data: 'foobar' }, { /* config */ }));\n")),(0,l.kt)("h4",{id:"arguments-16"},"Arguments"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"{string}")," ",(0,l.kt)("inlineCode",{parentName:"li"},"pathOrBaseURL")," a path or base URL for the request"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/api/func-client/modules/http#httprequestconfig"},(0,l.kt)("inlineCode",{parentName:"a"},"{HttpRequestConfig['body'] | undefined}"))," ",(0,l.kt)("inlineCode",{parentName:"li"},"body"),"\na request body"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/api/func-client/modules/http#httprequestconfig"},(0,l.kt)("inlineCode",{parentName:"a"},"{HttpRequestConfig | undefined}"))," ",(0,l.kt)("inlineCode",{parentName:"li"},"config"),"\na request configuration object")),(0,l.kt)("h3",{id:"makerequest"},(0,l.kt)("inlineCode",{parentName:"h3"},"makeRequest")),(0,l.kt)(r.Z,{only:"HTTP",mdxType:"FunctionInfo"}),(0,l.kt)("p",null,"Prepare a generic HTTP request.\nIf given path starts with scheme (HTTPS, etc.), it will be used as the base\nURL of action, otherwise it will only be used as path."),(0,l.kt)("h4",{id:"example-17"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"import { makeRequest } from 'func-client/http';\n\naction().use(makeRequest('https://example.com', { /* config */ }));\n")),(0,l.kt)("h4",{id:"arguments-17"},"Arguments"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"{string}")," ",(0,l.kt)("inlineCode",{parentName:"li"},"pathOrBaseURL")," a path or base URL for the request"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/api/func-client/modules/http#httprequestconfig"},(0,l.kt)("inlineCode",{parentName:"a"},"{HttpRequestConfig | undefined}"))," ",(0,l.kt)("inlineCode",{parentName:"li"},"config"),"\na request configuration object")),(0,l.kt)("h3",{id:"param"},(0,l.kt)("inlineCode",{parentName:"h3"},"param")),(0,l.kt)(r.Z,{only:"HTTP",mdxType:"FunctionInfo"}),(0,l.kt)("p",null,"Set the given query param on the request.\nThe new params will be merged with the previous ones."),(0,l.kt)("h4",{id:"example-18"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"import { param } from 'func-client/http';\n\naction().use(param('foo', 'foo'));   // Key and value.\naction().use(param({ bar: 'bar' })); // Object.\n")),(0,l.kt)("h4",{id:"arguments-18"},"Arguments"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"{string | Dictionary}")," ",(0,l.kt)("inlineCode",{parentName:"li"},"key")," a key for the param or a params object"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"{unknown | undefined}")," ",(0,l.kt)("inlineCode",{parentName:"li"},"value")," a value for the param")),(0,l.kt)("h3",{id:"abortsignal"},(0,l.kt)("inlineCode",{parentName:"h3"},"abortSignal")),(0,l.kt)(r.Z,{only:"HTTP",mdxType:"FunctionInfo"}),(0,l.kt)("p",null,"Configure an abort signal on the request to\n",(0,l.kt)("a",{parentName:"p",href:"https://developer.chrome.com/blog/abortable-fetch/"},"make it abortable"),"."),(0,l.kt)("h4",{id:"example-19"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"import { abortSignal } from 'func-client/http';\n\nconst abortController = new AbortController();\n\naction().use(abortSignal(abortController));\n")),(0,l.kt)("h4",{id:"arguments-19"},"Arguments"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"{Optional<AbortController | AbortSignal>}")," ",(0,l.kt)("inlineCode",{parentName:"li"},"controllerOrSignal")," an abort\ncontroller or signal instance to configure (or undefined/null to cancel a\nprevious configuration)")),(0,l.kt)("h2",{id:"jsonapi"},"JSON:API"),(0,l.kt)("h3",{id:"fields"},(0,l.kt)("inlineCode",{parentName:"h3"},"fields")),(0,l.kt)(r.Z,{only:"JSON:API",requires:"Model",mdxType:"FunctionInfo"}),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://jsonapi.org/format/#fetching-sparse-fieldsets"},"Select the given JSON:API fieldsets"),"\nfor the current context's model. The new fieldsets will be merged with the\nprevious ones."),(0,l.kt)("h4",{id:"example-20"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"import { fields } from 'func-client/jsonapi';\n\naction().use(fields('title'));\naction().use(fields('title', 'description'));\naction().use(fields(['title', 'description']));\n")),(0,l.kt)("h4",{id:"arguments-20"},"Arguments"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/api/func-client/modules/core#modelkey"},(0,l.kt)("inlineCode",{parentName:"a"},"{ArrayableVariadic<ModelKey<M>>}"))," ",(0,l.kt)("inlineCode",{parentName:"li"},"...fieldset")," a\nfield or a set of field to select for the current context's model")),(0,l.kt)("h3",{id:"fieldsfor"},(0,l.kt)("inlineCode",{parentName:"h3"},"fieldsFor")),(0,l.kt)(r.Z,{only:"JSON:API",mdxType:"FunctionInfo"}),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://jsonapi.org/format/#fetching-sparse-fieldsets"},"Select the given JSON:API fieldsets"),"\nfor the given model. The new fieldsets will be merged with the\nprevious ones."),(0,l.kt)("h4",{id:"example-21"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"import { fieldsFor } from 'func-client/jsonapi';\n\n\naction().use(fieldsFor(Post, 'title'));\naction().use(fieldsFor(Post, 'title', 'description'));\naction().use(fieldsFor(Post, ['title', 'description']));\n")),(0,l.kt)("h4",{id:"arguments-21"},"Arguments"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/api/func-client/modules/core#modelclass"},(0,l.kt)("inlineCode",{parentName:"a"},"{M extends ModelClass<D>}"))," ",(0,l.kt)("inlineCode",{parentName:"li"},"model")," the model\nto select the fieldsets for"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/api/func-client/modules/core#modelkey"},(0,l.kt)("inlineCode",{parentName:"a"},"{ArrayableVariadic<ModelKey<M>>}"))," ",(0,l.kt)("inlineCode",{parentName:"li"},"...fieldset")," a\nfield or a set of field to select for the given model")),(0,l.kt)("h3",{id:"filterby"},(0,l.kt)("inlineCode",{parentName:"h3"},"filterBy")),(0,l.kt)(r.Z,{only:"JSON:API",mdxType:"FunctionInfo"}),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://jsonapi.org/format/#fetching-filtering"},"Filter the JSON:API resource"),"\nby the given key and value.\nWhen key is an object, it will spread the object as a filter values map.\nThe new filter will be merged with the previous ones."),(0,l.kt)("h4",{id:"example-22"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"import { filterBy } from 'func-client/jsonapi';\n\n\naction().use(filterBy('isPublished', true));\n")),(0,l.kt)("h4",{id:"arguments-22"},"Arguments"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"{string | Dictionary}")," ",(0,l.kt)("inlineCode",{parentName:"li"},"key")," a key for the filter or a filter object"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"{unknown | undefined}")," ",(0,l.kt)("inlineCode",{parentName:"li"},"value")," a value for the filter")),(0,l.kt)("h3",{id:"sortby"},(0,l.kt)("inlineCode",{parentName:"h3"},"sortBy")),(0,l.kt)(r.Z,{only:"JSON:API",mdxType:"FunctionInfo"}),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://jsonapi.org/format/#fetching-sorting"},"Sort the JSON:API resource"),"\nby the given key and direction. The new sort will be merged with the\nprevious ones. ",(0,l.kt)("strong",{parentName:"p"},"Sorts priority are kept"),"."),(0,l.kt)("h4",{id:"example-23"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"import { sortBy } from 'func-client/jsonapi';\n\naction().use(sortBy('createdAt'));\n")),(0,l.kt)("h4",{id:"arguments-23"},"Arguments"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"{string | string[]}")," ",(0,l.kt)("inlineCode",{parentName:"li"},"key")," the key(s) for the sort"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"{'asc' | 'desc' = 'asc'}")," ",(0,l.kt)("inlineCode",{parentName:"li"},"direction")," the direction for the sort")),(0,l.kt)("h3",{id:"sortbydesc"},(0,l.kt)("inlineCode",{parentName:"h3"},"sortByDesc")),(0,l.kt)(r.Z,{only:"JSON:API",mdxType:"FunctionInfo"}),(0,l.kt)("p",null,"Shortcut for the ",(0,l.kt)("a",{parentName:"p",href:"#sortby"},(0,l.kt)("inlineCode",{parentName:"a"},"sortBy")," function")," with a ",(0,l.kt)("inlineCode",{parentName:"p"},"desc")," direction."),(0,l.kt)("h4",{id:"example-24"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"import { sortByDesc } from 'func-client/jsonapi';\n\naction().use(sortByDesc('createdAt'));\n")),(0,l.kt)("h4",{id:"arguments-24"},"Arguments"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"{string | string[]}")," ",(0,l.kt)("inlineCode",{parentName:"li"},"key")," the key(s) for the sort")),(0,l.kt)("h3",{id:"paginate"},(0,l.kt)("inlineCode",{parentName:"h3"},"paginate")),(0,l.kt)(r.Z,{only:"JSON:API",mdxType:"FunctionInfo"}),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://jsonapi.org/format/#fetching-pagination"},"Paginate the JSON:API resource"),"\nby the given params.\nJSON:API specification on pagination is agnostic, so page params may be\nanything used by your implementation."),(0,l.kt)("h4",{id:"example-25"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"import { paginate } from 'func-client/jsonapi';\n\n\naction().use(paginate({ number: 1, size: 10 }));\n")),(0,l.kt)("h4",{id:"arguments-25"},"Arguments"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"{unknown}")," ",(0,l.kt)("inlineCode",{parentName:"li"},"page")," a pagination value which match your implementation")),(0,l.kt)("h2",{id:"hooks"},"Hooks"),(0,l.kt)("h3",{id:"onpreparing"},(0,l.kt)("inlineCode",{parentName:"h3"},"onPreparing")),(0,l.kt)("p",null,"Register a ",(0,l.kt)("inlineCode",{parentName:"p"},"preparing")," hook callback on action.\nCallback may be async."),(0,l.kt)("h4",{id:"example-26"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"import { onPreparing } from 'func-client/jsonapi';\n\n\naction().use(onPreparing(() => {\n  /* Do something */\n}));\n")),(0,l.kt)("h4",{id:"arguments-26"},"Arguments"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"{() => Awaitable<void>}")," ",(0,l.kt)("inlineCode",{parentName:"li"},"callback")," callback to run on event")),(0,l.kt)("h3",{id:"onrunning"},(0,l.kt)("inlineCode",{parentName:"h3"},"onRunning")),(0,l.kt)("p",null,"Register a ",(0,l.kt)("inlineCode",{parentName:"p"},"running")," hook callback on action.\nCallback may be async."),(0,l.kt)("h4",{id:"example-27"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"import { onRunning } from 'func-client/jsonapi';\n\n\naction().use(onRunning((event) => {\n  /* Do something */\n}));\n")),(0,l.kt)("h4",{id:"arguments-27"},"Arguments"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"{(event: { context: {}; result: unknown }) => Awaitable<void>}")," ",(0,l.kt)("inlineCode",{parentName:"li"},"callback")," callback to run on event")),(0,l.kt)("h3",{id:"onsuccess"},(0,l.kt)("inlineCode",{parentName:"h3"},"onSuccess")),(0,l.kt)("p",null,"Register a ",(0,l.kt)("inlineCode",{parentName:"p"},"success")," hook callback on action.\nCallback may be async."),(0,l.kt)("h4",{id:"example-28"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"import { onSuccess } from 'func-client/jsonapi';\n\n\naction().use(onSuccess((event) => {\n  /* Do something */\n}));\n")),(0,l.kt)("h4",{id:"arguments-28"},"Arguments"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"{(event: { context: {} }) => Awaitable<void>}")," ",(0,l.kt)("inlineCode",{parentName:"li"},"callback")," callback to run on event")),(0,l.kt)("h3",{id:"onerror"},(0,l.kt)("inlineCode",{parentName:"h3"},"onError")),(0,l.kt)("p",null,"Register a ",(0,l.kt)("inlineCode",{parentName:"p"},"error")," hook callback on action.\nCallback may be async."),(0,l.kt)("h4",{id:"example-29"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"import { onError } from 'func-client/jsonapi';\n\n\naction().use(onError((event) => {\n  /* Do something */\n}));\n")),(0,l.kt)("h4",{id:"arguments-29"},"Arguments"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"{(event: { context: {}; error: unknown }) => Awaitable<void>}")," ",(0,l.kt)("inlineCode",{parentName:"li"},"callback")," callback to run on event")),(0,l.kt)("h3",{id:"onfinally"},(0,l.kt)("inlineCode",{parentName:"h3"},"onFinally")),(0,l.kt)("p",null,"Register a ",(0,l.kt)("inlineCode",{parentName:"p"},"finally")," hook callback on action.\nCallback may be async."),(0,l.kt)("h4",{id:"example-30"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"import { onFinally } from 'func-client/jsonapi';\n\n\naction().use(onFinally((event) => {\n  /* Do something */\n}));\n")),(0,l.kt)("h4",{id:"arguments-30"},"Arguments"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"{(event: { context: {} }) => Awaitable<void>}")," ",(0,l.kt)("inlineCode",{parentName:"li"},"callback")," callback to run on event")))}d.isMDXComponent=!0}}]);
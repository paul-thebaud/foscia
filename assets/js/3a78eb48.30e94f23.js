"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6563],{9613:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>f});var r=t(9496);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),u=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=u(e.components);return r.createElement(s.Provider,{value:n},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=u(t),m=a,f=d["".concat(s,".").concat(m)]||d[m]||p[m]||o;return t?r.createElement(f,i(i({ref:n},c),{},{components:t})):r.createElement(f,i({ref:n},c))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=m;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[d]="string"==typeof e?e:a,i[1]=l;for(var u=2;u<o;u++)i[u]=t[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},782:(e,n,t)=>{t.d(n,{Z:()=>i});var r=t(9496),a=t(5924);const o={tabItem:"tabItem_eDPh"};function i(e){let{children:n,hidden:t,className:i}=e;return r.createElement("div",{role:"tabpanel",className:(0,a.Z)(o.tabItem,i),hidden:t},n)}},1399:(e,n,t)=>{t.d(n,{Z:()=>O});var r=t(7366),a=t(9496),o=t(5924),i=t(8696),l=t(3442),s=t(6777),u=t(8435),c=t(4416);function d(e){return function(e){return a.Children.map(e,(e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:n,label:t,attributes:r,default:a}}=e;return{value:n,label:t,attributes:r,default:a}}))}function p(e){const{values:n,children:t}=e;return(0,a.useMemo)((()=>{const e=n??d(t);return function(e){const n=(0,u.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function m(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function f(e){let{queryString:n=!1,groupId:t}=e;const r=(0,l.k6)(),o=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,s._X)(o),(0,a.useCallback)((e=>{if(!o)return;const n=new URLSearchParams(r.location.search);n.set(o,e),r.replace({...r.location,search:n.toString()})}),[o,r])]}function y(e){const{defaultValue:n,queryString:t=!1,groupId:r}=e,o=p(e),[i,l]=(0,a.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!m({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const r=t.find((e=>e.default))??t[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:n,tabValues:o}))),[s,u]=f({queryString:t,groupId:r}),[d,y]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[r,o]=(0,c.Nk)(t);return[r,(0,a.useCallback)((e=>{t&&o.set(e)}),[t,o])]}({groupId:r}),b=(()=>{const e=s??d;return m({value:e,tabValues:o})?e:null})();(0,a.useLayoutEffect)((()=>{b&&l(b)}),[b]);return{selectedValue:i,selectValue:(0,a.useCallback)((e=>{if(!m({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);l(e),u(e),y(e)}),[u,y,o]),tabValues:o}}var b=t(4197);const h={tabList:"tabList_AXDX",tabItem:"tabItem_bAX3"};function g(e){let{className:n,block:t,selectedValue:l,selectValue:s,tabValues:u}=e;const c=[],{blockElementScrollPositionUntilNextRender:d}=(0,i.o5)(),p=e=>{const n=e.currentTarget,t=c.indexOf(n),r=u[t].value;r!==l&&(d(n),s(r))},m=e=>{let n=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const t=c.indexOf(e.currentTarget)+1;n=c[t]??c[0];break}case"ArrowLeft":{const t=c.indexOf(e.currentTarget)-1;n=c[t]??c[c.length-1];break}}n?.focus()};return a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":t},n)},u.map((e=>{let{value:n,label:t,attributes:i}=e;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:l===n?0:-1,"aria-selected":l===n,key:n,ref:e=>c.push(e),onKeyDown:m,onClick:p},i,{className:(0,o.Z)("tabs__item",h.tabItem,i?.className,{"tabs__item--active":l===n})}),t??n)})))}function v(e){let{lazy:n,children:t,selectedValue:r}=e;const o=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=o.find((e=>e.props.value===r));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return a.createElement("div",{className:"margin-top--md"},o.map(((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==r}))))}function w(e){const n=y(e);return a.createElement("div",{className:(0,o.Z)("tabs-container",h.tabList)},a.createElement(g,(0,r.Z)({},e,n)),a.createElement(v,(0,r.Z)({},e,n)))}function O(e){const n=(0,b.Z)();return a.createElement(w,(0,r.Z)({key:String(n)},e))}},1937:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var r=t(7366),a=(t(9496),t(9613));t(782),t(1399);const o={sidebar_position:30,description:"Generic CRUD functions setup using your own action factory."},i="JSON:API generic CRUD",l={unversionedId:"examples/jsonapi-generic",id:"examples/jsonapi-generic",title:"JSON:API generic CRUD",description:"Generic CRUD functions setup using your own action factory.",source:"@site/docs/examples/jsonapi-generic.mdx",sourceDirName:"examples",slug:"/examples/jsonapi-generic",permalink:"/foscia/docs/examples/jsonapi-generic",draft:!1,editUrl:"https://github.com/paul-thebaud/foscia/tree/main/website/docs/examples/jsonapi-generic.mdx",tags:[],version:"current",lastUpdatedAt:1679231872,formattedLastUpdatedAt:"Mar 19, 2023",sidebarPosition:30,frontMatter:{sidebar_position:30,description:"Generic CRUD functions setup using your own action factory."},sidebar:"docsSidebar",previous:{title:"JSON:API blog CRUD",permalink:"/foscia/docs/examples/jsonapi-blog"},next:{title:"Reference",permalink:"/foscia/docs/category/reference"}},s={},u=[{value:"Classic CRUD",id:"classic-crud",level:2},{value:"View many",id:"view-many",level:3},{value:"View one",id:"view-one",level:3},{value:"Create or update one",id:"create-or-update-one",level:3},{value:"Delete one",id:"delete-one",level:3}],c={toc:u},d="wrapper";function p(e){let{components:n,...t}=e;return(0,a.kt)(d,(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"jsonapi-generic-crud"},"JSON:API generic CRUD"),(0,a.kt)("admonition",{title:"What you'll learn",type:"tip"},(0,a.kt)("ul",{parentName:"admonition"},(0,a.kt)("li",{parentName:"ul"},"Writing generic CRUD functions to use your models through a JSON:API backend"))),(0,a.kt)("h2",{id:"classic-crud"},"Classic CRUD"),(0,a.kt)("h3",{id:"view-many"},"View many"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"import {\n    ModelRelationDotKey,\n    Model,\n    forModel,\n    when,\n    include,\n    all,\n} from 'foscia/core';\nimport {\n    filterBy,\n    sortByDesc,\n    paginate,\n    usingDocument,\n} from 'foscia/jsonapi';\nimport action from './action';\nimport Post from './models/post';\n\ntype FetchAllOptions<M extends Model> = {\n    search?: string;\n    include?: ModelRelationDotKey<M>[];\n    page?: number;\n};\n\nexport default async function fetchAll<M extends Model>(\n    model: M,\n    query: FetchAllOptions<M> = {},\n) {\n    return action()\n        .use(forModel(model))\n        .use(when(query.search, (a, s) => a.use(filterBy('search', s))))\n        .use(when(query.include, (a, i) => a.use(include(i))))\n        .use(sortByDesc('createdAt'))\n        .use(paginate({ number: query.page ?? 1 }))\n        .run(all(usingDocument));\n}\n\n// Somewhere in your app.\nconst { instances, document } = await fetchAll(Post, {\n    search: 'Hello',\n    include: ['tags'],\n});\n")),(0,a.kt)("h3",{id:"view-one"},"View one"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"import {\n    ModelRelationDotKey,\n    ModelId,\n    Model,\n    find,\n    when,\n    include,\n    oneOrFail,\n} from 'foscia/core';\nimport action from './action';\nimport Post from './models/post';\n\ntype FetchOneOptions<M extends Model> = {\n    include?: ModelRelationDotKey<M>[];\n};\n\nexport default async function fetchOne<M extends Model>(\n    model: M,\n    id: ModelId,\n    query: FetchOneOptions<M> = {},\n) {\n    return action()\n        .use(find(model, id))\n        .use(when(query.include, (a, i) => a.use(include(i))))\n        .run(oneOrFail());\n}\n\n// Somewhere in your app.\nconst post = await fetchOne(Post, '123-abc', {\n    include: ['tags'],\n});\n")),(0,a.kt)("h3",{id:"create-or-update-one"},"Create or update one"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"import {\n    changed,\n    fill,\n    include,\n    ModelInstance,\n    ModelRelationDotKey,\n    ModelValues,\n    oneOrCurrent,\n    reset,\n    save,\n    when,\n} from 'foscia/core';\nimport action from './action';\nimport Post from './models/post';\n\ntype SaveOneOptions<I extends ModelInstance> = {\n    include?: ModelRelationDotKey<I>[];\n};\n\nexport default async function saveOne<I extends ModelInstance>(\n    instance: I,\n    values: Partial<ModelValues<I>>,\n    query: SaveOneOptions<I> = {},\n) {\n    fill(instance, values);\n\n    try {\n        await action()\n            .use(save(instance))\n            .use(when(query.include, (a, i) => a.use(include(i))))\n            .run(\n                when(\n                    !instance.exists || changed(instance),\n                    oneOrCurrent(),\n                    () => instance,\n                ),\n            );\n    } catch (error) {\n        reset(instance);\n\n        throw error;\n    }\n\n    return instance;\n}\n\n// Somewhere in your app.\nconst post = new Post();\n\nawait saveOne(\n    post,\n    {\n        title: 'Hello World!',\n        publishedAt: new Date(),\n    },\n    {\n        include: ['tags'],\n    },\n);\n")),(0,a.kt)("h3",{id:"delete-one"},"Delete one"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"import { destroy, none } from 'foscia/core';\nimport action from './action';\nimport Post from './models/post';\n\nexport default async function deleteOne(instance: ModelInstance) {\n    await action().use(destroy(instance)).run(none());\n}\n\n// Somewhere in your app.\nconst post = new Post();\n\nawait deleteOne(post);\n")))}p.isMDXComponent=!0}}]);
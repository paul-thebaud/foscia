"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[669],{9613:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>d});var a=n(9496);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i=a.createContext({}),c=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,i=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),m=c(n),d=o,f=m["".concat(i,".").concat(d)]||m[d]||p[d]||r;return n?a.createElement(f,l(l({ref:t},u),{},{components:n})):a.createElement(f,l({ref:t},u))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,l=new Array(r);l[0]=m;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:o,l[1]=s;for(var c=2;c<r;c++)l[c]=n[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},208:(e,t,n)=>{n.d(t,{Z:()=>l});var a=n(9496),o=n(5924);const r="tabItem_IPoj";function l(e){let{children:t,hidden:n,className:l}=e;return a.createElement("div",{role:"tabpanel",className:(0,o.Z)(r,l),hidden:n},t)}},4210:(e,t,n)=>{n.d(t,{Z:()=>d});var a=n(4250),o=n(9496),r=n(5924),l=n(4375),s=n(4436),i=n(7883),c=n(4930);const u="tabList_xr86",p="tabItem_r4_W";function m(e){var t;const{lazy:n,block:l,defaultValue:m,values:d,groupId:f,className:g}=e,b=o.Children.map(e.children,(e=>{if((0,o.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),v=d??b.map((e=>{let{props:{value:t,label:n,attributes:a}}=e;return{value:t,label:n,attributes:a}})),y=(0,s.l)(v,((e,t)=>e.value===t.value));if(y.length>0)throw new Error(`Docusaurus error: Duplicate values "${y.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const h=null===m?m:m??(null==(t=b.find((e=>e.props.default)))?void 0:t.props.value)??b[0].props.value;if(null!==h&&!v.some((e=>e.value===h)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${h}" but none of its children has the corresponding value. Available values are: ${v.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:k,setTabGroupChoices:w}=(0,i.U)(),[x,T]=(0,o.useState)(h),P=[],{blockElementScrollPositionUntilNextRender:M}=(0,c.o5)();if(null!=f){const e=k[f];null!=e&&e!==x&&v.some((t=>t.value===e))&&T(e)}const O=e=>{const t=e.currentTarget,n=P.indexOf(t),a=v[n].value;a!==x&&(M(t),T(a),null!=f&&w(f,String(a)))},N=e=>{var t;let n=null;switch(e.key){case"Enter":O(e);break;case"ArrowRight":{const t=P.indexOf(e.currentTarget)+1;n=P[t]??P[0];break}case"ArrowLeft":{const t=P.indexOf(e.currentTarget)-1;n=P[t]??P[P.length-1];break}}null==(t=n)||t.focus()};return o.createElement("div",{className:(0,r.Z)("tabs-container",u)},o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":l},g)},v.map((e=>{let{value:t,label:n,attributes:l}=e;return o.createElement("li",(0,a.Z)({role:"tab",tabIndex:x===t?0:-1,"aria-selected":x===t,key:t,ref:e=>P.push(e),onKeyDown:N,onClick:O},l,{className:(0,r.Z)("tabs__item",p,null==l?void 0:l.className,{"tabs__item--active":x===t})}),n??t)}))),n?(0,o.cloneElement)(b.filter((e=>e.props.value===x))[0],{className:"margin-top--md"}):o.createElement("div",{className:"margin-top--md"},b.map(((e,t)=>(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==x})))))}function d(e){const t=(0,l.Z)();return o.createElement(m,(0,a.Z)({key:String(t)},e))}},1867:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>d,frontMatter:()=>s,metadata:()=>c,toc:()=>p});var a=n(4250),o=(n(9496),n(9613)),r=n(208),l=n(4210);const s={sidebar_position:1,description:"Blog articles with tags example. Model setup and action usage."},i="Blog CRUD",c={unversionedId:"examples/blog",id:"examples/blog",title:"Blog CRUD",description:"Blog articles with tags example. Model setup and action usage.",source:"@site/docs/examples/blog.mdx",sourceDirName:"examples",slug:"/examples/blog",permalink:"/func-client/docs/examples/blog",draft:!1,editUrl:"https://github.com/paul-thebaud/func-client/tree/main/website/docs/examples/blog.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,description:"Blog articles with tags example. Model setup and action usage."},sidebar:"tutorialSidebar",previous:{title:"Examples",permalink:"/func-client/docs/category/examples"},next:{title:"Generic CRUD",permalink:"/func-client/docs/examples/generic"}},u={},p=[{value:"Models",id:"models",level:2},{value:"CRUD",id:"crud",level:2},{value:"View many",id:"view-many",level:3},{value:"View one",id:"view-one",level:3},{value:"Create or update one",id:"create-or-update-one",level:3},{value:"Delete one",id:"delete-one",level:3}],m={toc:p};function d(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"blog-crud"},"Blog CRUD"),(0,o.kt)("admonition",{title:"What you'll learn",type:"tip"},(0,o.kt)("ul",{parentName:"admonition"},(0,o.kt)("li",{parentName:"ul"},"Defining blog and tag models"),(0,o.kt)("li",{parentName:"ul"},"Use blog model for CRUD operations"))),(0,o.kt)("p",null,"This is a simple example to implement a blog content management using\nFuncClient. This example is framework-agnostic, so you'll only see\nexamples of models or actions calls. You may use those examples inside\nany project (Vanilla JS, React, Vue, etc.)."),(0,o.kt)("h2",{id:"models"},"Models"),(0,o.kt)(l.Z,{groupId:"language",defaultValue:"ts",values:[{label:"TypeScript",value:"ts"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},(0,o.kt)(r.Z,{value:"ts",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="models/tag.ts"',title:'"models/tag.ts"'},"import { attr, hasMany, makeModel } from 'func-client/core';\nimport type Post from './post';\n\nconst TagModel = makeModel({\n  name: attr<string>(),\n  posts: hasMany<Post>(),\n});\n\nexport default class Tag extends TagModel {\n}\n"))),(0,o.kt)(r.Z,{value:"js",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="models/tag.ts"',title:'"models/tag.ts"'},"import { attr, hasMany, makeModel } from 'func-client/core';\n\nconst TagModel = makeModel({\n    name: attr(),\n    posts: hasMany(),\n});\n\nexport default class Tag extends TagModel {\n}\n")))),(0,o.kt)(l.Z,{groupId:"language",defaultValue:"ts",values:[{label:"TypeScript",value:"ts"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},(0,o.kt)(r.Z,{value:"ts",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="models/post.ts"',title:'"models/post.ts"'},"import { attr, hasMany, makeModel, toDate } from 'func-client/core';\nimport type Tag from './tag';\n\nconst PostModel = makeModel({\n  title: attr<string>(),\n  description: attr<string>(),\n  publishedAt: attr(toDate()),\n  tags: hasMany<Tag>(),\n});\n\nexport default class Post extends PostModel {\n}\n"))),(0,o.kt)(r.Z,{value:"js",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="models/post.ts"',title:'"models/post.ts"'},"import { attr, hasMany, makeModel, toDate } from 'func-client/core';\n\nconst PostModel = makeModel({\n    title: attr(),\n    description: attr(),\n    publishedAt: attr(toDate()),\n    tags: hasMany(),\n});\n\nexport default class Post extends PostModel {\n}\n")))),(0,o.kt)("h2",{id:"crud"},"CRUD"),(0,o.kt)("h3",{id:"view-many"},"View many"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"import { model, when } from 'func-client/core';\nimport { filter, sortByDesc, paginate, allMeta } from 'func-client/json-api';\nimport action from './action';\nimport Post from './models/post';\n\nexport default async function fetchAllPost(query = {}) {\n  return action()\n    .use(model(Post))\n    .use(when(query.search, (a, s) => a.use(filter('search', s))))\n    .use(sortByDesc('createdAt'))\n    .use(paginate({ number: query.page ?? 1 }))\n    .run(allMeta())\n}\n\n// Somewhere in your app.\nconst { data, meta } = await fetchAllPost({ search: 'Hello' });\n")),(0,o.kt)("h3",{id:"view-one"},"View one"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"import { find, include, oneOrFail } from 'func-client/core';\nimport action from './action';\nimport Post from './models/post';\n\nexport default async function fetchOnePost(id) {\n  return action()\n    .use(find(Post, id))\n    .use(include('tags'))\n    .run(oneOrFail())\n}\n\n// Somewhere in your app.\nconst post = await fetchOnePost('123-abc');\n")),(0,o.kt)("h3",{id:"create-or-update-one"},"Create or update one"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"import { changed, fill, one, reset, save, when } from 'func-client/core';\nimport action from './action';\nimport Post from './models/post';\n\nexport default async function savePost(post, values = {}) {\n  fill(post, values);\n\n  try {\n    await action()\n      .use(save(post))\n      .run(when(changed(post), one()));\n  } catch (error) {\n    reset(post);\n\n    throw error;\n  }\n\n  return post;\n}\n\n// Somewhere in your app.\nconst post = new Post();\n\nawait savePost(post, {\n  title: 'Hello World!',\n  publishedAt: new Date(),\n});\n")),(0,o.kt)("h3",{id:"delete-one"},"Delete one"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"import { destroy, none } from 'func-client/core';\nimport action from './action';\nimport Post from './models/post';\n\nexport default async function deletePost(post) {\n  await action()\n    .use(destroy(post))\n    .run(none());\n}\n\n// Somewhere in your app.\nconst post = new Post();\n\nawait deletePost(post);\n")))}d.isMDXComponent=!0}}]);
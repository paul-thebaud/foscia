"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3514],{9613:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var i=n(9496);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=i.createContext({}),p=function(e){var t=i.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return i.createElement(l.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},u=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=p(n),u=a,f=m["".concat(l,".").concat(u)]||m[u]||d[u]||r;return n?i.createElement(f,o(o({ref:t},c),{},{components:n})):i.createElement(f,o({ref:t},c))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,o=new Array(r);o[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[m]="string"==typeof e?e:a,o[1]=s;for(var p=2;p<r;p++)o[p]=n[p];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}u.displayName="MDXCreateElement"},1843:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>s,toc:()=>p});var i=n(8028),a=(n(9496),n(9613));const r={sidebar_position:1,description:"Quick introduction on available implementations for Foscia."},o="Presentation",s={unversionedId:"guides/implementations/presentation",id:"guides/implementations/presentation",title:"Presentation",description:"Quick introduction on available implementations for Foscia.",source:"@site/docs/guides/implementations/presentation.md",sourceDirName:"guides/implementations",slug:"/guides/implementations/presentation",permalink:"/foscia/docs/guides/implementations/presentation",draft:!1,editUrl:"https://github.com/paul-thebaud/foscia/tree/main/website/docs/guides/implementations/presentation.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,description:"Quick introduction on available implementations for Foscia."},sidebar:"docsSidebar",previous:{title:"Configuring dependencies",permalink:"/foscia/docs/category/configuring-dependencies"},next:{title:"Cache",permalink:"/foscia/docs/guides/implementations/cache"}},l={},p=[{value:"Introduction",id:"introduction",level:2},{value:"Core implementation",id:"core-implementation",level:2},{value:"JSON:API implementation",id:"jsonapi-implementation",level:2},{value:"REST implementation",id:"rest-implementation",level:2}],c={toc:p},m="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(m,(0,i.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"presentation"},"Presentation"),(0,a.kt)("h2",{id:"introduction"},"Introduction"),(0,a.kt)("p",null,"Foscia actions might require one or many dependencies to work:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Cache")," will store already fetched models instances. It will avoid\nmultiple instances of the same record coexisting and allows you to retrieve\nalready fetched record without making further requests to your data source."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Registry")," is a map of types and associated model. It is used by\ndeserializer to identify which models should map to which types."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Serializer")," will serialize instances to the data source format."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Deserializer")," will deserialize records to instances. It might use the\ncache and registry internally."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Adapter")," create the exchange between your actions' built context and your\ndata source. As an example, it will ",(0,a.kt)("em",{parentName:"li"},"translate")," the context to an HTTP\nrequest when using JSON:API or REST implementations.")),(0,a.kt)("p",null,"Some dependencies have a common implementation through the core and some may\nhave a specific implementation (HTTP, JSON:API, etc.)."),(0,a.kt)("h2",{id:"core-implementation"},"Core implementation"),(0,a.kt)("p",null,"Foscia propose core implementation for the ",(0,a.kt)("inlineCode",{parentName:"p"},"Cache")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"Registry")," actions'\ndependencies. Both classes are available through ",(0,a.kt)("inlineCode",{parentName:"p"},"foscia/core")," namespace and\nboth factory are available through ",(0,a.kt)("inlineCode",{parentName:"p"},"foscia/blueprints"),"."),(0,a.kt)("p",null,"Those dependencies may be used with any implementations."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/guides/implementations/cache"},"Cache through ",(0,a.kt)("inlineCode",{parentName:"a"},"RefsCache"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/guides/implementations/registry"},"Registry through ",(0,a.kt)("inlineCode",{parentName:"a"},"MapRegistry")))),(0,a.kt)("h2",{id:"jsonapi-implementation"},"JSON:API implementation"),(0,a.kt)("p",null,"The JSON:API implementation is built on a common base for HTTP interaction and\nobjects (de)serialization. It is described in depth inside the\n",(0,a.kt)("a",{parentName:"p",href:"/docs/guides/implementations/jsonapi"},"JSON:API implementation guide"),"."),(0,a.kt)("h2",{id:"rest-implementation"},"REST implementation"),(0,a.kt)("p",null,"The REST implementation is built on a common base for HTTP interaction and raw\nobjects (de)serialization. It is described in depth inside the\n",(0,a.kt)("a",{parentName:"p",href:"/docs/guides/implementations/rest"},"REST implementation guide"),"."))}d.isMDXComponent=!0}}]);
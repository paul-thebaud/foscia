"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8664],{9613:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>m});var a=t(9496);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),u=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=u(e.components);return a.createElement(s.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},p=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),p=u(t),m=r,h=p["".concat(s,".").concat(m)]||p[m]||d[m]||l;return t?a.createElement(h,i(i({ref:n},c),{},{components:t})):a.createElement(h,i({ref:n},c))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=t.length,i=new Array(l);i[0]=p;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var u=2;u<l;u++)i[u]=t[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}p.displayName="MDXCreateElement"},208:(e,n,t)=>{t.d(n,{Z:()=>i});var a=t(9496),r=t(5924);const l="tabItem_IPoj";function i(e){let{children:n,hidden:t,className:i}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(l,i),hidden:t},n)}},4210:(e,n,t)=>{t.d(n,{Z:()=>m});var a=t(4250),r=t(9496),l=t(5924),i=t(4375),o=t(4436),s=t(7883),u=t(4930);const c="tabList_xr86",d="tabItem_r4_W";function p(e){var n;const{lazy:t,block:i,defaultValue:p,values:m,groupId:h,className:k}=e,v=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),f=m??v.map((e=>{let{props:{value:n,label:t,attributes:a}}=e;return{value:n,label:t,attributes:a}})),g=(0,o.l)(f,((e,n)=>e.value===n.value));if(g.length>0)throw new Error(`Docusaurus error: Duplicate values "${g.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const N=null===p?p:p??(null==(n=v.find((e=>e.props.default)))?void 0:n.props.value)??v[0].props.value;if(null!==N&&!f.some((e=>e.value===N)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${N}" but none of its children has the corresponding value. Available values are: ${f.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:x,setTabGroupChoices:b}=(0,s.U)(),[y,C]=(0,r.useState)(N),w=[],{blockElementScrollPositionUntilNextRender:E}=(0,u.o5)();if(null!=h){const e=x[h];null!=e&&e!==y&&f.some((n=>n.value===e))&&C(e)}const T=e=>{const n=e.currentTarget,t=w.indexOf(n),a=f[t].value;a!==y&&(E(n),C(a),null!=h&&b(h,String(a)))},O=e=>{var n;let t=null;switch(e.key){case"Enter":T(e);break;case"ArrowRight":{const n=w.indexOf(e.currentTarget)+1;t=w[n]??w[0];break}case"ArrowLeft":{const n=w.indexOf(e.currentTarget)-1;t=w[n]??w[w.length-1];break}}null==(n=t)||n.focus()};return r.createElement("div",{className:(0,l.Z)("tabs-container",c)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":i},k)},f.map((e=>{let{value:n,label:t,attributes:i}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:y===n?0:-1,"aria-selected":y===n,key:n,ref:e=>w.push(e),onKeyDown:O,onClick:T},i,{className:(0,l.Z)("tabs__item",d,null==i?void 0:i.className,{"tabs__item--active":y===n})}),t??n)}))),t?(0,r.cloneElement)(v.filter((e=>e.props.value===y))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},v.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==y})))))}function m(e){const n=(0,i.Z)();return r.createElement(p,(0,a.Z)({key:String(n)},e))}},5834:(e,n,t)=>{t.d(n,{Z:()=>r});var a=t(9496);function r(e){let{children:n,color:t}=e;return a.createElement("span",{className:`chip ${t&&`chip--${t}`}`},n)}},7063:(e,n,t)=>{t.d(n,{Z:()=>l});var a=t(9496),r=t(5834);function l(e){let{children:n,version:t,only:l,requires:i,provides:o}=e;return a.createElement("div",{style:{marginBottom:"12px"}},t&&a.createElement(r.Z,null,t),l&&a.createElement(r.Z,{color:"primary"},"only: ",l),i&&a.createElement(r.Z,{color:"danger"},"requires: ",i),o&&a.createElement(r.Z,{color:"success"},"provides: ",o),n)}},3770:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>m,frontMatter:()=>o,metadata:()=>u,toc:()=>d});var a=t(4250),r=(t(9496),t(9613)),l=(t(208),t(4210),t(5834)),i=t(7063);const o={sidebar_position:3,description:"Available actions runners."},s="Actions runners",u={unversionedId:"api/actions-runners",id:"api/actions-runners",title:"Actions runners",description:"Available actions runners.",source:"@site/docs/api/actions-runners.mdx",sourceDirName:"api",slug:"/api/actions-runners",permalink:"/func-client/docs/api/actions-runners",draft:!1,editUrl:"https://github.com/paul-thebaud/func-client/tree/main/website/docs/api/actions-runners.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,description:"Available actions runners."},sidebar:"docsSidebar",previous:{title:"Actions enhancers",permalink:"/func-client/docs/api/actions-enhancers"},next:{title:"Actions extensions",permalink:"/func-client/docs/api/actions-extensions"}},c={},d=[{value:"Note",id:"note",level:2},{value:"Common",id:"common",level:2},{value:"<code>none</code>",id:"none",level:3},{value:"Example",id:"example",level:4},{value:"Returns",id:"returns",level:4},{value:"<code>raw</code>",id:"raw",level:3},{value:"Example",id:"example-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"<code>rawUsing</code>",id:"rawusing",level:3},{value:"Example",id:"example-2",level:4},{value:"Arguments",id:"arguments",level:4},{value:"Returns",id:"returns-2",level:4},{value:"<code>all</code>",id:"all",level:3},{value:"Example",id:"example-3",level:4},{value:"Returns",id:"returns-3",level:4},{value:"<code>allUsing</code>",id:"allusing",level:3},{value:"Example",id:"example-4",level:4},{value:"Arguments",id:"arguments-1",level:4},{value:"Returns",id:"returns-4",level:4},{value:"<code>one</code>",id:"one",level:3},{value:"Example",id:"example-5",level:4},{value:"Returns",id:"returns-5",level:4},{value:"<code>oneOrFail</code>",id:"oneorfail",level:3},{value:"Example",id:"example-6",level:4},{value:"Returns",id:"returns-6",level:4},{value:"<code>oneOrCurrent</code>",id:"oneorcurrent",level:3},{value:"Example",id:"example-7",level:4},{value:"Returns",id:"returns-7",level:4},{value:"<code>oneOr</code>",id:"oneor",level:3},{value:"Example",id:"example-8",level:4},{value:"Arguments",id:"arguments-2",level:4},{value:"Returns",id:"returns-8",level:4},{value:"<code>oneUsing</code>",id:"oneusing",level:3},{value:"Example",id:"example-9",level:4},{value:"Arguments",id:"arguments-3",level:4},{value:"Returns",id:"returns-9",level:4},{value:"<code>cached</code>",id:"cached",level:3},{value:"Example",id:"example-10",level:4},{value:"Returns",id:"returns-10",level:4},{value:"<code>cachedOrFail</code>",id:"cachedorfail",level:3},{value:"Example",id:"example-11",level:4},{value:"Returns",id:"returns-11",level:4},{value:"<code>cachedOr</code>",id:"cachedor",level:3},{value:"Example",id:"example-12",level:4},{value:"Arguments",id:"arguments-4",level:4},{value:"Returns",id:"returns-12",level:4},{value:"<code>cachedUsing</code>",id:"cachedusing",level:3},{value:"Example",id:"example-13",level:4},{value:"Arguments",id:"arguments-5",level:4},{value:"Returns",id:"returns-13",level:4},{value:"JSON:API",id:"jsonapi",level:2},{value:"<code>usingDocument</code>",id:"usingdocument",level:3},{value:"Example",id:"example-14",level:4}],p={toc:d};function m(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"actions-runners"},"Actions runners"),(0,r.kt)("h2",{id:"note"},"Note"),(0,r.kt)("p",null,"Many actions runners are available. Each may:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)(l.Z,{mdxType:"Chip"},"depend")," on a minimal package version"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)(l.Z,{color:"primary",mdxType:"Chip"},"only")," be available in a given use case (JSON:API, REST, HTTP, etc.)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)(l.Z,{color:"success",mdxType:"Chip"},"provide")," a given context to next enhancers or runners"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)(l.Z,{color:"danger",mdxType:"Chip"},"require")," a given context from previous enhancers or runners")),(0,r.kt)("p",null,"Examples of this guide will omit imports of your action factories or models to\nprovide shorter examples."),(0,r.kt)("h2",{id:"common"},"Common"),(0,r.kt)("h3",{id:"none"},(0,r.kt)("inlineCode",{parentName:"h3"},"none")),(0,r.kt)(i.Z,{requires:"Adapter",mdxType:"FunctionInfo"}),(0,r.kt)("p",null,"Run the action and ignore the content of the result.\nAdapter errors are not caught and so may be thrown."),(0,r.kt)("h4",{id:"example"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import { none } from 'func-client/core';\n\nawait action().run(none());\n")),(0,r.kt)("h4",{id:"returns"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"{Promise<void>}")),(0,r.kt)("h3",{id:"raw"},(0,r.kt)("inlineCode",{parentName:"h3"},"raw")),(0,r.kt)(i.Z,{requires:"Adapter",mdxType:"FunctionInfo"}),(0,r.kt)("p",null,"Run the action and retrieve the raw adapter's data."),(0,r.kt)("h4",{id:"example-1"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import { raw } from 'func-client/core';\n\nconst data = await action().run(raw());\n")),(0,r.kt)("h4",{id:"returns-1"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"{Promise<AD>}")," where ",(0,r.kt)("inlineCode",{parentName:"p"},"AD")," is your adapter's data (e.g. a fetch Response\nobject)."),(0,r.kt)("h3",{id:"rawusing"},(0,r.kt)("inlineCode",{parentName:"h3"},"rawUsing")),(0,r.kt)(i.Z,{requires:"Adapter",mdxType:"FunctionInfo"}),(0,r.kt)("p",null,"Run the action and retrieve the raw adapter's data.\nTransform the returned result using given callback."),(0,r.kt)("h4",{id:"example-2"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import { rawUsing } from 'func-client/core';\n\nconst transformedData = await action().run(rawUsing((data) => {\n  // TODO Transform and return data.\n  return data;\n}));\n")),(0,r.kt)("h4",{id:"arguments"},"Arguments"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"{Function}")," ",(0,r.kt)("inlineCode",{parentName:"li"},"transform")," the callback to transform the raw data object")),(0,r.kt)("h4",{id:"returns-2"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"{Promise<T>}")," where ",(0,r.kt)("inlineCode",{parentName:"p"},"T")," is the transformed result."),(0,r.kt)("h3",{id:"all"},(0,r.kt)("inlineCode",{parentName:"h3"},"all")),(0,r.kt)(i.Z,{requires:"Adapter, Deserializer, Model",mdxType:"FunctionInfo"}),(0,r.kt)("p",null,"Run the action and deserialize an array of model's instance."),(0,r.kt)("h4",{id:"example-3"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import { all } from 'func-client/core';\n\nconst posts = await action().run(all());\n")),(0,r.kt)("h4",{id:"returns-3"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"{Promise<I[]>}")," where ",(0,r.kt)("inlineCode",{parentName:"p"},"I")," is an instance of the targeted model."),(0,r.kt)("h3",{id:"allusing"},(0,r.kt)("inlineCode",{parentName:"h3"},"allUsing")),(0,r.kt)(i.Z,{requires:"Adapter, Deserializer, Model",mdxType:"FunctionInfo"}),(0,r.kt)("p",null,"Run the action and deserialize an array of model's instance.\nTransform the returned result using given callback."),(0,r.kt)("h4",{id:"example-4"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import { allUsing } from 'func-client/core';\nimport { usingDocument } from 'func-client/jsonapi';\n\nconst data = await action().run(allUsing(usingDocument));\ndata.instances; // Model instances.\ndata.document;  // JSON:API document with meta, etc.\n")),(0,r.kt)("h4",{id:"arguments-1"},"Arguments"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"{Function}")," ",(0,r.kt)("inlineCode",{parentName:"li"},"transform")," the callback to transform the all data object")),(0,r.kt)("h4",{id:"returns-4"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"{Promise<T>}")," where ",(0,r.kt)("inlineCode",{parentName:"p"},"T")," is the transformed result."),(0,r.kt)("h3",{id:"one"},(0,r.kt)("inlineCode",{parentName:"h3"},"one")),(0,r.kt)(i.Z,{requires:"Adapter, Deserializer, Model",mdxType:"FunctionInfo"}),(0,r.kt)("p",null,"Run the action and deserialize one model's instance.\nReturns null when not found."),(0,r.kt)("h4",{id:"example-5"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import { one } from 'func-client/core';\n\nconst post = await action().run(one());\n")),(0,r.kt)("h4",{id:"returns-5"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"{Promise<I | null>}")," where ",(0,r.kt)("inlineCode",{parentName:"p"},"I")," is an instance of the targeted model."),(0,r.kt)("h3",{id:"oneorfail"},(0,r.kt)("inlineCode",{parentName:"h3"},"oneOrFail")),(0,r.kt)(i.Z,{requires:"Adapter, Deserializer, Model",mdxType:"FunctionInfo"}),(0,r.kt)("p",null,"Run the action and deserialize one model's instance.\nThrow an ",(0,r.kt)("inlineCode",{parentName:"p"},"ExpectedRunFailureError")," when not found or empty result."),(0,r.kt)("h4",{id:"example-6"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import { oneOrFail } from 'func-client/core';\n\nconst post = await action().run(oneOrFail());\n")),(0,r.kt)("h4",{id:"returns-6"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"{Promise<I>}")," where ",(0,r.kt)("inlineCode",{parentName:"p"},"I")," is an instance of the targeted model."),(0,r.kt)("h3",{id:"oneorcurrent"},(0,r.kt)("inlineCode",{parentName:"h3"},"oneOrCurrent")),(0,r.kt)(i.Z,{requires:"Adapter, Deserializer, Model, Instance",mdxType:"FunctionInfo"}),(0,r.kt)("p",null,"Run the action and deserialize one model's instance.\nReturns current instance when not found or empty result."),(0,r.kt)("h4",{id:"example-7"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import { oneOrCurrent } from 'func-client/core';\n\nconst post = await action().run(oneOrCurrent());\n")),(0,r.kt)("h4",{id:"returns-7"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"{Promise<I>}")," where ",(0,r.kt)("inlineCode",{parentName:"p"},"I")," is an instance of the targeted model."),(0,r.kt)("h3",{id:"oneor"},(0,r.kt)("inlineCode",{parentName:"h3"},"oneOr")),(0,r.kt)(i.Z,{requires:"Adapter, Deserializer, Model",mdxType:"FunctionInfo"}),(0,r.kt)("p",null,"Run the action and deserialize one model's instance.\nRun the given runner when not found or empty result."),(0,r.kt)("h4",{id:"example-8"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import { oneOr } from 'func-client/core';\n\nconst post = await action().run(oneOr(() => null));\n")),(0,r.kt)("h4",{id:"arguments-2"},"Arguments"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"{Function}")," ",(0,r.kt)("inlineCode",{parentName:"li"},"nilRunner")," the runner to use when one result is empty")),(0,r.kt)("h4",{id:"returns-8"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"{Promise<I | T>}")," where ",(0,r.kt)("inlineCode",{parentName:"p"},"I")," is an instance of the targeted model and ",(0,r.kt)("inlineCode",{parentName:"p"},"T")," is\nthe ",(0,r.kt)("inlineCode",{parentName:"p"},"nilRunner")," result."),(0,r.kt)("h3",{id:"oneusing"},(0,r.kt)("inlineCode",{parentName:"h3"},"oneUsing")),(0,r.kt)(i.Z,{requires:"Adapter, Deserializer, Model",mdxType:"FunctionInfo"}),(0,r.kt)("p",null,"Run the action and deserialize one model's instance.\nHandle the not found instance as null result.\nTransform the returned result using given callback."),(0,r.kt)("h4",{id:"example-9"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import { oneUsing } from 'func-client/core';\nimport { usingDocument } from 'func-client/jsonapi';\n\nconst data = await action().run(oneUsing(usingDocument));\ndata.instance; // Model instance.\ndata.document; // JSON:API document with meta, etc.\n")),(0,r.kt)("h4",{id:"arguments-3"},"Arguments"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"{Function}")," ",(0,r.kt)("inlineCode",{parentName:"li"},"transform")," the callback to transform the one data object")),(0,r.kt)("h4",{id:"returns-9"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"{Promise<T>}")," where ",(0,r.kt)("inlineCode",{parentName:"p"},"T")," is the transformed result."),(0,r.kt)("h3",{id:"cached"},(0,r.kt)("inlineCode",{parentName:"h3"},"cached")),(0,r.kt)(i.Z,{requires:"Cache, Model, Type, Id",mdxType:"FunctionInfo"}),(0,r.kt)("p",null,"Retrieve an instance from the cache.\nIf the instance is not in cache or if the included relations are not loaded,\nreturns null."),(0,r.kt)("h4",{id:"example-10"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import { cached } from 'func-client/core';\n\nconst post = await action().run(cached());\n")),(0,r.kt)("h4",{id:"returns-10"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"{Promise<I | null>}")," where ",(0,r.kt)("inlineCode",{parentName:"p"},"I")," is an instance of the targeted model."),(0,r.kt)("h3",{id:"cachedorfail"},(0,r.kt)("inlineCode",{parentName:"h3"},"cachedOrFail")),(0,r.kt)(i.Z,{requires:"Cache, Model, Type, Id",mdxType:"FunctionInfo"}),(0,r.kt)("p",null,"Retrieve an instance from the cache.\nIf the instance is not in cache or if the included relations are not loaded,\nthrows an ",(0,r.kt)("inlineCode",{parentName:"p"},"ExpectedRunFailureError"),"."),(0,r.kt)("h4",{id:"example-11"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import { cachedOrFail } from 'func-client/core';\n\nconst post = await action().run(cachedOrFail());\n")),(0,r.kt)("h4",{id:"returns-11"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"{Promise<I>}")," where ",(0,r.kt)("inlineCode",{parentName:"p"},"I")," is an instance of the targeted model."),(0,r.kt)("h3",{id:"cachedor"},(0,r.kt)("inlineCode",{parentName:"h3"},"cachedOr")),(0,r.kt)(i.Z,{requires:"Cache, Model, Type, Id",mdxType:"FunctionInfo"}),(0,r.kt)("p",null,"Retrieve an instance from the cache.\nIf the instance is not in cache or if the included relations are not loaded,\nrun the given runner."),(0,r.kt)("h4",{id:"example-12"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import { cachedOr } from 'func-client/core';\n\nconst post = await action().run(cachedOr(() => null));\n")),(0,r.kt)("h4",{id:"arguments-4"},"Arguments"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"{Function}")," ",(0,r.kt)("inlineCode",{parentName:"li"},"nilRunner")," the runner to use when cached result is empty")),(0,r.kt)("h4",{id:"returns-12"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"{Promise<I | T>}")," where ",(0,r.kt)("inlineCode",{parentName:"p"},"I")," is an instance of the targeted model and ",(0,r.kt)("inlineCode",{parentName:"p"},"T")," is\nthe ",(0,r.kt)("inlineCode",{parentName:"p"},"nilRunner")," result."),(0,r.kt)("h3",{id:"cachedusing"},(0,r.kt)("inlineCode",{parentName:"h3"},"cachedUsing")),(0,r.kt)(i.Z,{requires:"Cache, Model, Type, Id",mdxType:"FunctionInfo"}),(0,r.kt)("p",null,"Retrieve an instance from the cache.\nIf the instance is not in cache or if the included relations are not loaded,\nreturns null.\nTransform the returned result using given callback."),(0,r.kt)("h4",{id:"example-13"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import { cachedUsing } from 'func-client/core';\n\nconst post = await action().run(cachedUsing(({ instance }) => instance));\n")),(0,r.kt)("h4",{id:"arguments-5"},"Arguments"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"{Function}")," ",(0,r.kt)("inlineCode",{parentName:"li"},"transform")," the callback to transform the cached data object")),(0,r.kt)("h4",{id:"returns-13"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"{Promise<T>}")," where ",(0,r.kt)("inlineCode",{parentName:"p"},"T")," is the transformed result."),(0,r.kt)("h2",{id:"jsonapi"},"JSON:API"),(0,r.kt)("h3",{id:"usingdocument"},(0,r.kt)("inlineCode",{parentName:"h3"},"usingDocument")),(0,r.kt)(i.Z,{only:"JSON:API",mdxType:"FunctionInfo"}),(0,r.kt)("p",null,"Append the JSON:API document object to data object.\nUse it as the parameter of ",(0,r.kt)("inlineCode",{parentName:"p"},"allUsing")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"oneUsing")," runners."),(0,r.kt)("h4",{id:"example-14"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import { allUsing } from 'func-client/core';\nimport { usingDocument } from 'func-client/jsonapi';\n\nconst data = await action().run(allUsing(usingDocument));\ndata.instances; // Model instances.\ndata.document;  // JSON:API document with meta, etc.\n")))}m.isMDXComponent=!0}}]);
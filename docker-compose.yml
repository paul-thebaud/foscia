services:
  build:
    container_name: build
    build:
      dockerfile: Dockerfile
      target: build
    working_dir: /home/lib
    volumes:
      - ./:/home/lib:consistent
  test:
    container_name: test
    depends_on:
      build:
        condition: service_completed_successfully
    build:
      dockerfile: Dockerfile
      target: test
    working_dir: /home/lib
    volumes:
      - ./:/home/lib:consistent
    tty: true
  playground:
    container_name: playground
    depends_on:
      build:
        condition: service_completed_successfully
    build:
      dockerfile: Dockerfile
      target: playground
    working_dir: /home/lib
    volumes:
      - ./:/home/lib:consistent
    ports:
      - 5173:5173
    labels:
      - traefik.enable=true
      - traefik.http.routers.playground.rule=Host(`playground.foscia.localhost`)
      - traefik.http.routers.playground.entryPoints=web
      - traefik.http.services.playground.loadbalancer.server.port=5173
  docs:
    container_name: docs
    depends_on:
      build:
        condition: service_completed_successfully
    build:
      dockerfile: Dockerfile
      target: docs
    working_dir: /home/lib/website
    volumes:
      - ./:/home/lib:consistent
    ports:
      - 3000:3000
    labels:
      - traefik.enable=true
      - traefik.http.routers.docs.rule=Host(`docs.foscia.localhost`)
      - traefik.http.routers.docs.entryPoints=web
      - traefik.http.services.docs.loadbalancer.server.port=3000
  reverse-proxy:
    container_name: reverse-proxy
    image: traefik:latest
    restart: unless-stopped
    depends_on:
      playground:
        condition: service_healthy
      docs:
        condition: service_healthy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik.yml:/traefik.yml
    ports:
      - 80:80
    labels:
      - traefik.enable=true
      - traefik.http.routers.reverse-proxy-dashboard.rule=Host(`proxy.foscia.localhost`)
      - traefik.http.routers.reverse-proxy-dashboard.service=api@internal
      - traefik.http.routers.reverse-proxy-dashboard.entrypoints=web
      - traefik.http.services.reverse-proxy-dashboard.loadbalancer.server.port=80
